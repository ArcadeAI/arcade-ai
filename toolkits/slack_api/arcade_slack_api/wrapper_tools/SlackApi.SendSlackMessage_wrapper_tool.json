{
  "object": "api_wrapper_tool",
  "version": "0.1.0",
  "data": {
    "requires_auth": {
      "provider_id": "slack",
      "scopes": [
        "chat:write"
      ]
    },
    "requires_secrets": null,
    "name": "send_slack_message",
    "qualified_name": "SlackApi.SendSlackMessage",
    "description": "Send messages to a Slack channel.\n\nThis tool sends a message to a specified Slack channel using Slack's chat.postMessage API. It requires appropriate permissions (chat:write scope), and is useful when you need to communicate or alert teams within Slack.",
    "input": {
      "parameters": [
        {
          "name": "target_channel_id_or_name",
          "description": "An encoded ID or channel name for the target Slack channel, private group, or IM to send the message.",
          "inferrable": true,
          "required": true,
          "value_schema": {
            "val_type": "string",
            "inner_val_type": null
          },
          "api_endpoint_argument": {
            "name": "channel"
          }
        },
        {
          "name": "post_as_authenticated_user",
          "description": "Set to true to post the message as the authenticated user instead of as a bot. Only applicable for classic apps.",
          "inferrable": true,
          "required": false,
          "value_schema": {
            "val_type": "boolean",
            "inner_val_type": null
          },
          "api_endpoint_argument": {
            "name": "as_user"
          }
        },
        {
          "name": "structured_attachments",
          "description": "A list of structured attachment objects in JSON format. Each object should contain information such as title, text, and other Slack attachment fields. The list will be URL-encoded.",
          "inferrable": true,
          "required": false,
          "value_schema": {
            "val_type": "string",
            "inner_val_type": null
          },
          "api_endpoint_argument": {
            "name": "attachments"
          }
        },
        {
          "name": "structured_message_blocks",
          "description": "A URL-encoded JSON array of structured blocks to format the Slack message.",
          "inferrable": true,
          "required": false,
          "value_schema": {
            "val_type": "string",
            "inner_val_type": null
          },
          "api_endpoint_argument": {
            "name": "blocks"
          }
        },
        {
          "name": "message_icon_emoji",
          "description": "Emoji to use as the icon for the message. This will override the icon_url if provided.",
          "inferrable": true,
          "required": false,
          "value_schema": {
            "val_type": "string",
            "inner_val_type": null
          },
          "api_endpoint_argument": {
            "name": "icon_emoji"
          }
        },
        {
          "name": "message_icon_image_url",
          "description": "URL of an image to use as the icon for the message. Overrides the default icon.",
          "inferrable": true,
          "required": false,
          "value_schema": {
            "val_type": "string",
            "inner_val_type": null
          },
          "api_endpoint_argument": {
            "name": "icon_url"
          }
        },
        {
          "name": "find_and_link_user_groups",
          "description": "Enables linking of user groups within the message. Does not support individual user linking.",
          "inferrable": true,
          "required": false,
          "value_schema": {
            "val_type": "boolean",
            "inner_val_type": null
          },
          "api_endpoint_argument": {
            "name": "link_names"
          }
        },
        {
          "name": "markdown_message_text",
          "description": "Message text formatted in markdown, not to be used with 'blocks' or 'text'. Limit is 12,000 characters.",
          "inferrable": true,
          "required": false,
          "value_schema": {
            "val_type": "string",
            "inner_val_type": null
          },
          "api_endpoint_argument": {
            "name": "markdown_text"
          }
        },
        {
          "name": "event_metadata",
          "description": "A URL-encoded JSON object with 'event_type' and 'event_payload' fields. Accessible to any app or user in the workspace.",
          "inferrable": true,
          "required": false,
          "value_schema": {
            "val_type": "string",
            "inner_val_type": null
          },
          "api_endpoint_argument": {
            "name": "metadata"
          }
        },
        {
          "name": "disable_slack_markup_parsing",
          "description": "Set to true to disable Slack markup parsing for the message. Enabled by default.",
          "inferrable": true,
          "required": false,
          "value_schema": {
            "val_type": "boolean",
            "inner_val_type": null
          },
          "api_endpoint_argument": {
            "name": "mrkdwn"
          }
        },
        {
          "name": "message_parsing_mode",
          "description": "Specify how messages are parsed. Options include 'full', 'none', or 'auto'.",
          "inferrable": true,
          "required": false,
          "value_schema": {
            "val_type": "string",
            "inner_val_type": null
          },
          "api_endpoint_argument": {
            "name": "parse"
          }
        },
        {
          "name": "make_reply_broadcast",
          "description": "Indicates if the reply should be visible to everyone in the channel, used with 'thread_ts'.",
          "inferrable": true,
          "required": false,
          "value_schema": {
            "val_type": "boolean",
            "inner_val_type": null
          },
          "api_endpoint_argument": {
            "name": "reply_broadcast"
          }
        },
        {
          "name": "message_text",
          "description": "The primary text content of the Slack message. Recommended as a fallback when using 'blocks'.",
          "inferrable": true,
          "required": false,
          "value_schema": {
            "val_type": "string",
            "inner_val_type": null
          },
          "api_endpoint_argument": {
            "name": "text"
          }
        },
        {
          "name": "reply_to_message_timestamp",
          "description": "The timestamp of the parent message to which you want to reply. Avoid using a reply's timestamp; use the parent message's timestamp instead.",
          "inferrable": true,
          "required": false,
          "value_schema": {
            "val_type": "string",
            "inner_val_type": null
          },
          "api_endpoint_argument": {
            "name": "thread_ts"
          }
        },
        {
          "name": "enable_unfurling_of_text_links",
          "description": "Set to true to enable unfurling of primarily text-based content in the message.",
          "inferrable": true,
          "required": false,
          "value_schema": {
            "val_type": "boolean",
            "inner_val_type": null
          },
          "api_endpoint_argument": {
            "name": "unfurl_links"
          }
        },
        {
          "name": "disable_media_unfurling",
          "description": "Set to true to disable unfurling of media content in the message.",
          "inferrable": true,
          "required": false,
          "value_schema": {
            "val_type": "boolean",
            "inner_val_type": null
          },
          "api_endpoint_argument": {
            "name": "unfurl_media"
          }
        },
        {
          "name": "bot_user_name",
          "description": "The username to display as the sender of the message in Slack.",
          "inferrable": true,
          "required": false,
          "value_schema": {
            "val_type": "string",
            "inner_val_type": null
          },
          "api_endpoint_argument": {
            "name": "username"
          }
        }
      ]
    },
    "toolkit": {
      "name": "arcade_slack_api",
      "version": "0.1.0"
    }
  }
}