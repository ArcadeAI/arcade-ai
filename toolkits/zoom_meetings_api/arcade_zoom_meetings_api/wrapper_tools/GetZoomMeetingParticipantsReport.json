{
  "name": "GetZoomMeetingParticipantsReport",
  "fully_qualified_name": "ZoomApi.GetZoomMeetingParticipantsReport@0.1.0",
  "description": "Get a report of past Zoom meeting participants.\n\nCall this tool to obtain a report of participants from a past Zoom meeting with two or more attendees, including the host. Useful for obtaining details on participant attendance and interaction in meetings that were not limited to a single participant.",
  "toolkit": {
    "name": "ArcadeZoomApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "meeting_identifier",
        "required": true,
        "description": "The ID or UUID of the Zoom meeting. For meeting UUIDs starting with '/' or containing '//', double-encode before requesting.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "meetingId"
      },
      {
        "name": "records_per_page",
        "required": false,
        "description": "The number of participant records to return in a single API call.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of records returned within a single API call."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page_size"
      },
      {
        "name": "pagination_next_page_token",
        "required": false,
        "description": "Token for fetching the next page of large result sets. Expires in 15 minutes.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "next_page_token"
      },
      {
        "name": "include_registrant_id_in_report",
        "required": false,
        "description": "Include 'registrant_id' in the response to see registrant ID attributes.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "registrant_id"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](/docs/api-reference/zoom-api/methods#operation/meetingRegistrants)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "include_fields"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'reportMeetingParticipants'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-zoom",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "report:read:admin",
          "report:read:list_meeting_participants:admin"
        ]
      }
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.0.0",
    "description": "Tools that enable LLMs to interact directly with the Zoom API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.0.0",
      "description": ""
    },
    "url": "https://api.zoom.us/v2/report/meetings/{meetingId}/participants",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "page_size",
        "tool_parameter_name": "records_per_page",
        "description": "The number of records returned within a single API call.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of records returned within a single API call."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "next_page_token",
        "tool_parameter_name": "pagination_next_page_token",
        "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Use the next page token to paginate through large result sets. A next page token is returned whenever the set of available results exceeds the current page size. This token's expiration period is 15 minutes."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "include_fields",
        "tool_parameter_name": "include_registrant_id_in_report",
        "description": "Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](/docs/api-reference/zoom-api/methods#operation/meetingRegistrants).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "registrant_id"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](/docs/api-reference/zoom-api/methods#operation/meetingRegistrants)."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "meetingId",
        "tool_parameter_name": "meeting_identifier",
        "description": "The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The meeting's ID or universally unique ID (UUID). \n* If you provide a meeting ID, the API will return a response for the latest meeting instance. \n* If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ]
  }
}
