SMALL_PAGE_CONTENT = """## Why Build Tools with Arcade?

Arcade solves key challenges for agent developers:

1. **Auth Native to Agents**: Authentication designed for agentic workflows â€” the right token is always available for each user without complex integration work.

2. **Multi-Tenant Tool Calling**: Enable your agent to take actions AS the specific user of the agent

3. **Better Agent Capabilities**: Build tools that securely connect to the services your users want your agent to integrate with (Gmail, Slack, Google Drive, Zoom, etc.) without complex integration code.

4. **Clean Codebase**: Eliminate environment variables full of API keys and complex OAuth implementations from your application code.

5. **Flexible Integration**: Choose your integration approach:

    - LLM API for the simplest experience with hundreds of pre-built tools
    - Tools API for direct execution control
    - Auth API for authentication-only integration
    - Framework connectors for LangChain, CrewAI and others

6. **Zero Schema Maintenance**: Tool definitions generate automatically from code annotations and translate to any LLM format.

7. **Built-in Evaluation**: Evaluate your tools across user scenarios, llms, and context with Arcade's tool calling evaluation framework. Ensure your tools are working as expected and are useful for your agents.

8. **Complete Tooling Ecosystem**: Built-in evaluation framework, scalable execution infrastructure, and flexible deployment options (including VPC, Docker, and Kubernetes).

Arcade lets you focus on creating useful tool functionality rather than solving complex authentication, deployment, and integration challenges.
"""  # noqa: E501

# A conversation where a user asks the AI to get the content of a page named 'Arcade Notes'
GET_SMALL_PAGE_CONTENT_CONVERSATION = [
    {"role": "user", "content": "get 'Arcade Notes'"},
    {
        "role": "assistant",
        "content": "",
        "tool_calls": [
            {
                "id": "call_92Vhl75I8KEKQfjihS7l53DL",
                "type": "function",
                "function": {
                    "name": "Notion_GetPageContentByTitle",
                    "arguments": '{"title":"Arcade Notes"}',
                },
            }
        ],
    },
    {
        "role": "tool",
        "content": "# Arcade Notes\nFirst, make sure you have these pre-requisites installed on your system:  \n- **Python 3.10**\xa0or higherVerify your Python version by running\xa0`python --version`\xa0or\xa0`python3 --version`\xa0in your terminal.  \n- **pip**: The Python package installer should be available. It's typically included with Python.  \n- **Arcade Account**: Sign up for an\xa0[Arcade account](https://api.arcade.dev/signup?utm_source=docs&utm_medium=page&utm_campaign=custom-tools)\xa0if you haven't already.  \nLet's set up Arcade and give it a try!  \n### **Obtain an API key**  \nInstall the Arcade CLI and SDK and log in. Your Arcade API key will be printed to the console as well as saved to\xa0`~/.arcade/credentials.yaml`.  \npip install arcade-aiarcade login\n### **Try\xa0**`arcade chat`  \nWith Arcade CLI installed, you can test outour API with the\xa0`arcade chat`\xa0command:  \narcade chat\nThis launches a chat with the Arcade Cloud Engine (hosted at\xa0`api.arcade.dev`). All pre-built Arcade tools are available to use.  \nFor example, try asking:  \nstar the ArcadeAI/arcade-ai repo on Github\nArcade will ask you to authorize with GitHub, and then the AI assistant will star the\xa0[ArcadeAI/arcade-ai](https://github.com/ArcadeAI/arcade-ai)\xa0repo on your behalf.  \nYou'll see output similar to this:  \nAssistant (gpt-4o):I starred the ArcadeAI/arcade-ai repo on Github for you!\nYou can use Ctrl-C to exit the chat at any time.  \n### **Try more tools**  \nTry prompting the AI with different requests:  \n- Search the web to find when The Winds of Winter will be released  \n- Summarize my emails from today  \n- What's playing on my Spotify right now?  \nTo see all tools available in the Cloud, run:  \narcade show\nGreat job! ðŸŽ‰ You've set up Arcade and used your first tool.  \n### **Next steps**  \n- [Learn about tools](https://docs.arcade.dev/home/use-tools/tools-overview)\xa0andhow they work  \n- Learn how to\xa0[call tools with models](https://docs.arcade.dev/home/use-tools/call-tools-with-models)  \n- Or, jump ahead to building your own\xa0[custom tools](https://docs.arcade.dev/home/build-tools/create-a-toolkit)  \n",  # noqa: E501
        "tool_call_id": "call_92Vhl75I8KEKQfjihS7l53DL",
        "name": "Notion_GetPageContentByTitle",
    },
    {
        "role": "assistant",
        "content": "Here are the notes on setting up and using Arcade:\n\n### Pre-requisites\nMake sure you have the following installed on your system:\n-**Python 3.10 or higher**: Verify using `python --version` or `python3 --version` in your terminal.\n- **pip**: The Python package installer, typically included with Python.\n- **Arcade Account**: Sign up for an [Arcade account](https://api.arcade.dev/signup?utm_source=docs&utm_medium=page&utm_campaign=custom-tools) if you haven't already.\n\n### Setting up Arcade\n\n#### Obtain an API key\n1. Install the Arcade CLI and SDK.\n2. Log in to Arcade: Run the command `arcade login`.\n3. Your Arcade API key will be printed to the console and saved in `~/.arcade/credentials.yaml`.\n\n#### Try `arcade chat`\n- With Arcade CLI installed, you can test the API using `arcade chat`.\n- This command launches a chat with the Arcade Cloud Engine (hosted at `api.arcade.dev`), giving you access to all pre-built Arcade tools.\n  \nExample prompt:  \n- Ask to star the `ArcadeAI/arcade-ai` repo on GitHub. The AI assistant will star the repo for you after authorization.\n\nEvent example output:\n```\nAssistant (gpt-4o): I starred the ArcadeAI/arcade-ai repo on Github for you!\n```\n\nUse `Ctrl-C` to exit the chat anytime.\n\n### Explore More Tools\n- Try different requests like searching the web, summarizing emails, or checking your current Spotify play.\n- Run `arcade show` to see all available tools in the Cloud.\n\n### Next Steps\n- [Learn about tools](https://docs.arcade.dev/home/use-tools/tools-overview) and how they function.\n- Understand how to [call tools with models](https://docs.arcade.dev/home/use-tools/call-tools-with-models).\n- Begin building your own [custom tools](https://docs.arcade.dev/home/build-tools/create-a-toolkit).\n\nCongratulations on setting up Arcade and trying your first tool! ðŸŽ‰",  # noqa: E501
    },
]

SMALL_PAGE_CONTENT_TO_APPEND = """
# Next steps
Here are the next steps
1. Add ability to append to the end of a page
2. Make it Pythonic
## Next next steps
**Write** [evals](https://github.com/ArcadeAI/arcade-ai)
"""

SMALL_UPDATED_PAGE_CONTENT = """First, make sure you have these pre-requisites installed on your system:  \n- **Python 3.11**\xa0or higherVerify your Python version by running\xa0`python --version`\xa0or\xa0`python3 --version`\xa0in your terminal.  \n- **pip**: The Python package installer should be available. It's typically included with Python.  \n- **Arcade Account**: Sign up for an\xa0[Arcade account](https://api.arcade.dev/signup?utm_source=docs&utm_medium=page&utm_campaign=custom-tools)\xa0if you haven't already."""  # noqa: E501

# A conversation where the user asks to get the content of a very large Notion page
GET_LARGE_PAGE_CONTENT_CONVERSATION = [
    {"role": "system", "content": "Today is 2025-07-08, Tuesday."},
    {"role": "user", "content": "get the content of 4f5ed98af1534a3f88ec6434ed214754"},
    {
        "role": "assistant",
        "content": "",
        "tool_calls": [
            {
                "id": "call_QIhN3b4Fg0xfOWJbPh0Fbebg",
                "type": "function",
                "function": {
                    "name": "NotionToolkit_GetPageContentById",
                    "arguments": '{"page_id":"4f5ed98af1534a3f88ec6434ed214754"}',
                },
            }
        ],
    },
    {
        "role": "tool",
        "content": """# [ðŸ”— link] â€” Reinforcement learning\nFor reinforcement learning in psychology, see [Reinforcement](https://en.wikipedia.org/wiki/Reinforcement) and [Operant conditioning](https://en.wikipedia.org/wiki/Operant_conditioning).  \nThe typical framing of a reinforcement learning (RL) scenario: an agent takes actions in an environment, which is interpreted into a rewardand a state representation, which are fed back to the agent.  \n**Reinforcement learning** (**RL**) is an interdisciplinary area of [machine learning](https://en.wikipedia.org/wiki/Machine_learning) and [optimal control](https://en.wikipedia.org/wiki/Optimal_control) concerned with how an [intelligent agent](https://en.wikipedia.org/wiki/Intelligent_agent) should [take actions](https://en.wikipedia.org/wiki/Action_selection) in a dynamic environment in order to [maximize a reward](https://en.wikipedia.org/wiki/Reward-based_selection) signal. Reinforcement learning is one of the [three basic machine learning paradigms](https://en.wikipedia.org/wiki/Machine_learning#Approaches), alongside [supervised learning](https://en.wikipedia.org/wiki/Supervised_learning) and [unsupervised learning](https://en.wikipedia.org/wiki/Unsupervised_learning).  \nReinforcement learning differs from supervised learning in not needing labelled input-output pairs to be presented, and in not needing sub-optimal actions to be explicitly corrected. Instead, the focus is on finding a balance between exploration (of uncharted territory) and exploitation (of current knowledge) with the goal of maximizing the cumulative reward (the feedback of which might be incomplete or delayed).[[1]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-kaelbling-1) The search for this balance is known as the [explorationâ€“exploitation dilemma](https://en.wikipedia.org/wiki/Exploration%E2%80%93exploitation_dilemma).  \nThe environment is typically stated in the form of a [Markov decision process](https://en.wikipedia.org/wiki/Markov_decision_process) (MDP), as many reinforcement learning algorithms use [dynamic programming](https://en.wikipedia.org/wiki/Dynamic_programming) techniques.[[2]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-2) The main difference between classical dynamic programming methods and reinforcement learning algorithms is that the latter do not assume knowledge of an exact mathematical model of the Markov decision process, and they target large MDPs where exact methods become infeasible.[[3]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-Li-2023-3)  \n## Principles  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=1)] \nDue to its generality, reinforcement learning is studied in many disciplines, such as [game theory](https://en.wikipedia.org/wiki/Game_theory), [control theory](https://en.wikipedia.org/wiki/Control_theory),[operations research](https://en.wikipedia.org/wiki/Operations_research), [information theory](https://en.wikipedia.org/wiki/Information_theory), [simulation-based optimization](https://en.wikipedia.org/wiki/Simulation-based_optimization), [multi-agent systems](https://en.wikipedia.org/wiki/Multi-agent_system), [swarm intelligence](https://en.wikipedia.org/wiki/Swarm_intelligence), and [statistics](https://en.wikipedia.org/wiki/Statistics). In the operations research and control literature, RL is called *approximate dynamicprogramming*, or *neuro-dynamic programming.* The problems of interest in RL have also been studied in the [theory of optimal control](https://en.wikipedia.org/wiki/Optimal_control_theory), which is concerned mostly with the existence and characterization of optimal solutions, and algorithms for their exact computation, and less with learning or approximation (particularly in the absence of a mathematical model of the environment).  \nBasic reinforcement learning is modeled as a [Markov decision process](https://en.wikipedia.org/wiki/Markov_decision_process):  \n- A set of environment and agent states (the state space),;  \n- A set of actions (the action space), , of the agent;  \n- , the transition probability (at time ) from state  to state  under action .  \n- , the immediate reward after transition from  to  under action.  \nThe purpose of reinforcement learning is for the agent to learn an optimal (or near-optimal) policy that maximizes the reward function or other user-provided reinforcement signal that accumulates from immediate rewards. This is similar to [processes](https://en.wikipedia.org/wiki/Reinforcement) that appear to occur in animal psychology. For example, biological brains are hardwired to interpret signals such as pain and hunger as negative reinforcements, and interpret pleasure and food intake as positive reinforcements. In some circumstances, animals learn to adopt behaviors that optimize these rewards. This suggests that animals are capable of reinforcement learning.[[4]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-4)[[5]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-5)  \nA basic reinforcement learning agent interacts with its environment in discrete time steps. At each time step t, the agent receives the current state  and reward . It then chooses an action  from the set of available actions, which is subsequently sent to the environment. The environment moves to a new state  and the reward  associated with the *transition* is determined. The goal of a reinforcement learning agent is to learn a *policy*:  \nthat maximizes the expected cumulative reward.  \nFormulating the problem as a Markov decision process assumes the agent directly observes the current environmental state; in this case, the problem is said to have *full observability*. If the agent only has access to a subset of states, or if the observed states are corrupted by noise, the agent is said to have *partial observability*, and formally the problem must be formulated as a [partially observable Markov decision process](https://en.wikipedia.org/wiki/Partially_observable_Markov_decision_process). In both cases, the set of actions available to the agent can be restricted. For example, the state of an account balance could be restricted to be positive; if the current value of the state is 3 and the state transition attempts to reduce the value by 4, the transition will not be allowed.  \nWhen the agent\'s performance is compared to that of an agent that acts optimally, the difference in performance yields the notion of [regret](https://en.wikipedia.org/wiki/Regret_(decision_theory)). In order to act near optimally, the agent must reason about long-term consequences of its actions (i.e., maximize future rewards), although theimmediate reward associated with this might be negative.  \nThus, reinforcement learning is particularly well-suited to problems that include a long-term versus short-term reward trade-off. It has been appliedsuccessfully to various problems, including [energy storage](https://en.wikipedia.org/wiki/Energy_storage),[[6]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-6)[robot control](https://en.wikipedia.org/wiki/Robot_control),[[7]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-7)[photovoltaic generators](https://en.wikipedia.org/wiki/Photovoltaic_system),[[8]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-8)[backgammon](https://en.wikipedia.org/wiki/Backgammon), [checkers](https://en.wikipedia.org/wiki/Checkers),[[9]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-FOOTNOTESuttonBarto2018Chapter_11-9)[Go](https://en.wikipedia.org/wiki/Go_(game)) ([AlphaGo](https://en.wikipedia.org/wiki/AlphaGo)), and [autonomous driving systems](https://en.wikipedia.org/wiki/Self-driving_car).[[10]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-Ren-2022-10)  \nTwo elements make reinforcement learning powerful: the use of samples to optimize performance, and the use of [function approximation](https://en.wikipedia.org/wiki/Neural_network_(machine_learning)) to deal with large environments. Thanks to these two key components, RLcan be used in large environments in the following situations:  \n- A model of the environment is known, but an [analytic solution](https://en.wikipedia.org/wiki/Closed-form_expression) is not available;  \n- Only a simulation model of the environment is given (the subject of [simulation-based optimization](https://en.wikipedia.org/wiki/Simulation-based_optimization));[[11]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-11)  \n- The only way to collect information about the environment is to interact with it.  \nThe first two of these problems could be considered planning problems (since some form of model is available), while the last one could be considered to be a genuine learning problem. However, reinforcement learning converts both planning problems to [machine learning](https://en.wikipedia.org/wiki/Machine_learning) problems.  \n## Exploration  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=2)]  \nThe exploration vs. exploitation trade-off has been most thoroughly studied through the [multi-armed bandit](https://en.wikipedia.org/wiki/Multi-armed_bandit) problem and for finite state space Markov decision processes in Burnetas and Katehakis (1997).[[12]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-Optimal_adaptive_policies_for_Marko-12)  \nReinforcement learning requires clever exploration mechanisms; randomly selecting actions, without reference to an estimated probability distribution, shows poor performance. The case of (small) finite Markov decision processes is relatively well understood. However, due to the lack of algorithms that scale well with the number of states (or scale to problems with infinite state spaces), simple exploration methods are the most practical.  \nOne such method is -greedy, where  is a parameter controlling the amount of exploration vs. exploitation. With probability , exploitation is chosen, and the agent chooses the action that it believes has the best long-term effect (ties between actions are broken uniformly at random). Alternatively, with probability , exploration is chosen, and the action is chosen uniformly at random.  is usually a fixed parameter but can be adjusted either according to a schedule (making the agent explore progressively less), or adaptively based on heuristics.[[13]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-13)  \n## Algorithms for control learning  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=3)]  \nEven if the issue of exploration is disregarded and even if the state was observable (assumed hereafter), the problem remains to use past experience to find out which actions lead to higher cumulative rewards.  \n### Criterion of optimality  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=4)]  \n### Policy  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=5)]  \nThe agent\'s action selection is modeled as a map called *policy*:   \nThe policy map gives the probability of taking action  when in state .[[14]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-:0-14):\u200a61  There are also deterministic policies  for which  denotes the action that should be played at state .  \n### State-value function  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=6)]  \nThe state-value function  is defined as, *expected discounted return* starting with state , i.e. , and successively following policy . Hence, roughly speaking, the value function estimates "how good" it is to be in a given state.[[14]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-:0-14):\u200a60  \nwhere the random variable  denotes the **discounted return**, and is defined as the sum of future discounted rewards:  \nwhere  is the reward for transitioning from state  to ,  is the [discount rate](https://en.wikipedia.org/wiki/Q-learning#Discount_factor).  is less than 1, so rewards in the distant future are weighted less than rewards in the immediate future.  \nThe algorithm must find a policy with maximum expected discounted return. From the theory of Markov decision processes it is known that, without loss of generality, the search can be restricted to the set of so-called *stationary* policies. A policy is *stationary* if the action-distribution returned by it depends only on the last state visited (from the observation agent\'s history). The search can be further restricted to *deterministic* stationary policies. A *deterministic stationary* policy deterministically selects actions based on the current state. Since any such policy can be identified with a mapping from the set of states to the set of actions, these policies can be identified with such mappings with no loss of generality.  \n### Brute force  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=7)]  \nThe [brute force](https://en.wikipedia.org/wiki/Brute-force_search) approach entails two steps:  \n- For each possible policy, sample returns while following it  \n- Choose the policy with the largest expected discounted return  \nOne problem with this is that the number of policies can be large, or even infinite. Another is that the variance of the returns may be large, which requires many samples to accurately estimate the discounted return of each policy.  \nThese problems can be ameliorated if we assume some structure and allow samples generated from one policy to influence the estimates made for others. The two main approaches for achieving this are [value function estimation](https://en.wikipedia.org/wiki/Reinforcement_learning#Value_function) and [direct policy search](https://en.wikipedia.org/wiki/Reinforcement_learning#Direct_policy_search).  \n### Value function  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=8)]  \nSee also: [Value function](https://en.wikipedia.org/wiki/Value_function)  \nValue function approaches attempt to find a policy that maximizes the discounted return by maintaining a set of estimates of expected discounted returns  for some policy (usually either the "current" [on-policy] or the optimal [off-policy] one).  \nThese methods rely on the theory of Markov decision processes, where optimality is defined in a sense stronger than the one above: A policy is optimal if it achieves the best-expected discounted return from *any* initial state (i.e., initial distributions play no role in this definition). Again, an optimal policy can always be found among stationary policies.  \nTo define optimality in a formal manner, define the state-value of a policy  by  \nwhere  stands for the discounted return associated with following  from the initial state . Defining  as the maximum possible state-value of , where  isallowed to change,  \nA policy that achieves these optimal state-values in each state is called *optimal*. Clearly, a policy that is optimal in this sense is also optimal in the sense that it maximizes the expected discounted return, since , where  is a state randomly sampled from the distribution  of initial states (so ).  \nAlthough state-values suffice to define optimality, it is useful to define action-values. Given a state , an action  and a policy , the action-value of the pair  under  is defined by  \nwhere  now stands for the random discounted return associated with first taking action  in state  and following , thereafter.  \nThe theory of Markov decision processes states that if  is an optimal policy, we act optimally (take the optimal action) by choosing the action from  with the highest action-value at each state, . The *action-value function* of such an optimal policy () is called the *optimal action-value function* and is commonly denoted by . In summary, the knowledge of the optimal action-value function alone suffices to know how to act optimally.  \nAssuming full knowledge of the Markov decision process, the two basic approaches to compute the optimal action-value function are [value iteration](https://en.wikipedia.org/wiki/Value_iteration) and [policy iteration](https://en.wikipedia.org/wiki/Policy_iteration). Both algorithms compute a sequence of functions  () that converge to . Computing these functions involves computing expectations over the whole state-space, which is impractical for all but the smallest (finite) Markov decision processes. In reinforcement learning methods, expectations are approximated by averaging over samples and using function approximation techniques to cope with the need to represent value functions over large state-action spaces.  \n### Monte Carlo methods\n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=9)]  \n[Monte Carlo methods](https://en.wikipedia.org/wiki/Monte_Carlo_sampling)[[15]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-15) are used to solve reinforcement learning problems by averaging sample returns. Unlike methods that require full knowledge of the environment\'s dynamics, Monte Carlo methods rely solely on actual or [simulated](https://en.wikipedia.org/wiki/Simulation) experienceâ€”sequences of states, actions, and rewards obtained from interaction with an environment. This makes them applicable in situations where the complete dynamics are unknown. Learning from actual experience does not require prior knowledge of the environment and can still lead to optimal behavior. When using simulated experience, only a model capable of generating sample transitions is required, rather than a full specification of [transition probabilities](https://en.wikipedia.org/wiki/Markov_chain), which is necessary for [dynamic programming](https://en.wikipedia.org/wiki/Dynamic_programming) methods.  \nMonte Carlo methods apply to episodic tasks, where experience is divided into episodes that eventually terminate. Policy and value function updates occur only after the completion of an episode, making these methods incremental on an episode-by-episode basis, though not on a step-by-step (online) basis. The term "Monte Carlo" generally refers to any method involving [random sampling](https://en.wikipedia.org/wiki/Random_sampling); however,in this context, it specifically refers to methods that compute averages from *complete* returns, rather than *partial* returns.  \nThese methods function similarly to the [bandit algorithms](https://en.wikipedia.org/wiki/Multi-armed_bandit), in which returns are averaged for each state-action pair. The key difference is that actions taken in one state affect the returns of subsequent states within the same episode, making the problem [non-stationary](https://en.wikipedia.org/wiki/Non-stationary). To address this non-stationarity, Monte Carlo methods use the framework of general policy iteration (GPI). While dynamic programming computes [value functions](https://en.wikipedia.org/wiki/Value_function) using full knowledge of the [Markov decision process](https://en.wikipedia.org/wiki/Markov_decision_process) (MDP), Monte Carlo methods learn these functions through sample returns. The value functions and policies interact similarly to dynamic programming to achieve [optimality](https://en.wikipedia.org/wiki/Mathematical_optimization), first addressing the prediction problem and then extending to policy improvement and control, all based on sampled experience.[[14]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-:0-14)  \n### Temporal difference methods  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=10)]  \nMain article: [Temporal difference learning](https://en.wikipedia.org/wiki/Temporal_difference_learning) \nThe first problem is corrected by allowing the procedure to change the policy (at some or all states) before the values settle. This too may be problematic as it might prevent convergence. Most current algorithms do this, giving rise to the class of *generalized policy iteration* algorithms. Many [*actor-critic*](https://en.wikipedia.org/wiki/Actor-critic_algorithm)[ methods](https://en.wikipedia.org/wiki/Actor-critic_algorithm) belong to this category.  \nThe second issue can be corrected by allowing trajectories to contribute to any state-action pair in them. This may also help to some extent with the third problem, although a better solution when returns have high variance is Sutton\'s [temporal difference](https://en.wikipedia.org/wiki/Temporal_difference) (TD) methods that are based on the recursive [Bellman equation](https://en.wikipedia.org/wiki/Bellman_equation).[[16]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-16)[[17]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-FOOTNOTESuttonBarto2018[httpincompleteideasnetsuttonbookebooknode60html_%C2%A76._Temporal-Difference_Learning]-17) The computation in TD methods can be incremental (when after each transition the memory is changed andthe transition is thrown away), or batch (when the transitions are batched and the estimates are computed once based on the batch). Batch methods, such as the least-squares temporal difference method,[[18]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-18) may use the information in the samples better, while incremental methods are the only choice when batch methods are infeasible due to their high computational or memory complexity. Some methods try to combine the two approaches. Methods based on temporal differences also overcome the fourth issue.  \nAnother problem specific to TD comes from their reliance on the recursive Bellman equation. Most TD methods have a so-called  parameter  that can continuously interpolate between Monte Carlo methods that do not rely on the Bellman equationsand the basic TD methods that rely entirely on the Bellman equations. This can be effective in palliating this issue.  \n### Function approximation methods  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=11)]  \nIn order to address the fifth issue, *function approximation methods* are used. *Linear function approximation* starts with a mapping  that assigns a finite-dimensional vector to each state-action pair. Then, the action values of a state-action pair  are obtained by linearly combining the components of  with some *weights*:  \nThe algorithms then adjust the weights, instead of adjusting the values associated with the individual state-action pairs. Methods based on ideas from [nonparametric statistics](https://en.wikipedia.org/wiki/Nonparametric_statistics) (which can be seen to construct their own features) have been explored.  \nValue iteration can also be used as a starting point, giving rise to the [Q-learning](https://en.wikipedia.org/wiki/Q-learning) algorithm and its many variants.[[19]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-19) Including Deep Q-learning methods when a neural network is used to represent Q, with various applications in stochastic search problems.[[20]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-MBK-20)  \nThe problem with using action-values is that they may need highly precise estimates of the competing action values that can be hard to obtain when the returns are noisy, though this problem is mitigated to some extent by temporal difference methods. Using the so-called compatible function approximation method compromises generality and efficiency.  \n### Direct policy search  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=12)]  \nAn alternative method is to search directly in (some subset of) the policy space, in which case the problem becomes a case of [stochastic optimization](https://en.wikipedia.org/wiki/Stochastic_optimization). The two approaches available are gradient-based and gradient-free methods.  \n[Gradient](https://en.wikipedia.org/wiki/Gradient)-based methods (*policy gradient methods*) start with a mapping from a finite-dimensional (parameter) space to the space of policies: given the parameter vector , let  denote the policy associated to . Defining the performance function by  under mild conditions this function will be differentiable as a function of the parameter vector . If the gradient of  was known, one could use [gradient ascent](https://en.wikipedia.org/wiki/Gradient_descent). Since an analytic expression for the gradient is not available, only a noisy estimate is available. Such an estimate can be constructed in many ways, giving rise to algorithms such as Williams\'s REINFORCE method[[21]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-21) (which is known as the likelihood ratio method in the [simulation-based optimization](https://en.wikipedia.org/wiki/Simulation-based_optimization) literature).[[22]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-22)  \nA large classof methods avoids relying on gradient information. These include [simulated annealing](https://en.wikipedia.org/wiki/Simulated_annealing), [cross-entropy search](https://en.wikipedia.org/wiki/Cross-entropy_method) or methods of [evolutionary computation](https://en.wikipedia.org/wiki/Evolutionary_computation). Many gradient-free methods can achieve (in theory and in the limit) a global optimum.  \nPolicy search methods may converge slowly given noisy data. For example, this happens in episodic problems when the trajectories are long and the variance of the returns is large. Value-function based methods that rely on temporal differences might help in this case. In recent years, *actorâ€“critic methods* have been proposed and performed well on various problems.[[23]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-23)  \nPolicy search methods have been used in the [robotics](https://en.wikipedia.org/wiki/Robotics) context.[[24]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-24) Many policy search methods may get stuck in local optima (as they are based on [local search](https://en.wikipedia.org/wiki/Local_search_(optimization))).  \n### Model-based algorithms  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=13)]  \nFinally, all of the above methods can be combined with algorithms that first learn a model of the [Markov decision process](https://en.wikipedia.org/wiki/Markov_decision_process), the probability of each next state given an action taken from an existing state. For instance, the Dyna algorithm learns a model from experience, and uses that to provide more modelled transitions for a value function, in addition tothe real transitions.[[25]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-25) Such methods can sometimes be extended to use of non-parametric models, such as when the transitions are simply stored and "replayed" to the learning algorithm.[[26]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-26)  \nModel-based methods can be more computationally intensive than model-free approaches, and their utility can be limited by the extent to which the Markov decision process can be learnt.[[27]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-27)  \nThere are other ways to use models than to update a value function.[[28]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-28) For instance, in [model predictive control](https://en.wikipedia.org/wiki/Model_predictive_control) the model is used to update the behavior directly.  \n## Theory  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=14)]  \nBoth the asymptotic and finite-sample behaviors of most algorithms are well understood. Algorithms with provably good online performance (addressing the exploration issue) are known.  \nEfficient exploration of Markov decision processes is given in Burnetas and Katehakis (1997).[[12]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-Optimal_adaptive_policies_for_Marko-12) Finite-time performance bounds have also appeared for many algorithms, but these bounds are expected to be rather loose and thus more work is needed to better understand the relative advantages and limitations.  \nFor incremental algorithms, asymptotic convergence issues have been settled.[[*clarification needed*](https://en.wikipedia.org/wiki/Wikipedia:Please_clarify)] Temporal-difference-based algorithms converge under a wider set of conditions than was previously possible (for example, when used with arbitrary, smooth function approximation).  \n## Research  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=15)]  \nThis section **needs additional citations for **[**verification**](https://en.wikipedia.org/wiki/Wikipedia:Verifiability). Please help [improve this article](https://en.wikipedia.org/wiki/Special:EditPage/Reinforcement_learning) by [adding citations to reliable sources](https://en.wikipedia.org/wiki/Help:Referencing_for_beginners) in this section. Unsourced material may be challenged and removed. *(October 2022)**(*[*Learn how and when to remove this message*](https://en.wikipedia.org/wiki/Help:Maintenance_template_removal)*)*  \nResearch topics include:  \n- actor-critic architecture[[29]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-29)  \n- actor-critic-scenery architecture[[3]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-Li-2023-3)  \n- adaptive methods that work with fewer (or no) parameters under a large number of conditions  \n- bug detection in software projects[[30]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-30)  \n-continuous learning  \n- combinations with logic-based frameworks[[31]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-31)  \n- exploration in large Markov decision processes  \n- entity-based reinforcement learning[[32]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-32)[[33]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-33)[[34]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-34)  \n- [human feedback](https://en.wikipedia.org/wiki/Reinforcement_learning_from_human_feedback)[[35]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-35)  \n- interaction between implicit and explicit learning in skill acquisition  \n- [intrinsic motivation](https://en.wikipedia.org/wiki/Intrinsic_motivation_(artificial_intelligence)) which differentiates information-seeking, curiosity-type behaviours from task-dependent goal-directed behaviours large-scale empirical evaluations  \n- large (or continuous) action spaces  \n- modular and hierarchical reinforcement learning[[36]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-36)  \n- multiagent/distributed reinforcement learning is a topic of interest. Applications are expanding.[[37]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-37)  \n- occupant-centric control  \n- optimization of computing resources[[38]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-38)[[39]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-39)[[40]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-40)  \n- [partial information](https://en.wikipedia.org/wiki/Partially_observable_Markov_decision_process) (e.g., using [predictive state representation](https://en.wikipedia.org/wiki/Predictive_state_representation))  \n- reward function based on maximising novel information[[41]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-kaplan2004-41)[[42]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-klyubin2008-42)[[43]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-barto2013-43)  \n- sample-based planning (e.g., based on [Monte Carlo tree search](https://en.wikipedia.org/wiki/Monte_Carlo_tree_search)).  \n- securities trading[[44]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-44)  \n- [transfer learning](https://en.wikipedia.org/wiki/Transfer_learning)[[45]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-45)  \n- TD learning modeling [dopamine](https://en.wikipedia.org/wiki/Dopamine)-based learning in the brain. [Dopaminergic](https://en.wikipedia.org/wiki/Dopaminergic) projections from the [substantia nigra](https://en.wikipedia.org/wiki/Substantia_nigra) to the [basal ganglia](https://en.wikipedia.org/wiki/Basal_ganglia) function are the prediction error.  \n- value-function and policy search methods  \n##Comparison of key algorithms  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=16)]  \nThe following table lists the key algorithms for learning a policy depending on several criteria:  \n- The algorithm can be on-policy (it performs policy updates using trajectories sampled via the current policy)[[46]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-46) or off-policy.  \n- The action space may be discrete (e.g. the action space could be "going up", "going left", "going right", "going down", "stay") or continuous (e.g. moving the arm with a given angle).  \n- The state space may be discrete (e.g. the agent could be in a cell in a grid) or continuous (e.g. the agent could be located at a given position in the plane).  \n### Associative reinforcement learning  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=17)]  \nAssociative reinforcement learning tasks combine facets of stochastic learning automata tasks and supervised learning pattern classification tasks. In associative reinforcement learning tasks, the learning system interacts in a closed loop with its environment.[[50]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-50)  \n### Deep reinforcement learning  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=18)]  \nThis approach extends reinforcement learning by using a deep neural network and without explicitly designing the state space.[[51]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-intro_deep_RL-51) The work on learning ATARI games by Google [DeepMind](https://en.wikipedia.org/wiki/DeepMind) increased attention to [deep reinforcement learning](https://en.wikipedia.org/wiki/Deep_reinforcement_learning) or [end-to-end reinforcement learning](https://en.wikipedia.org/wiki/End-to-end_reinforcement_learning).[[52]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-DQN2-52)  \n### Adversarial deep reinforcement learning  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=19)]  \nAdversarial deep reinforcement learning is an active area of research in reinforcement learning focusing on vulnerabilities of learned policies. In this research area some studies initially showed that reinforcement learning policies are susceptible to imperceptible adversarial manipulations.[[53]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-53)[[54]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-54)[[55]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-55) While some methods have been proposed to overcome these susceptibilities, in the most recent studies it has been shown that these proposed solutions are far from providing an accurate representation of current vulnerabilities of deep reinforcement learning policies.[[56]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-56)  \n### Fuzzy reinforcement learning  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=20)]  \nBy introducing [fuzzy inference](https://en.wikipedia.org/wiki/Fuzzy_control_system) in reinforcement learning,[[57]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-57) approximating the state-action value function with [fuzzy rules](https://en.wikipedia.org/wiki/Fuzzy_rule) in continuous spacebecomes possible. The IF - THEN form of fuzzy rules make this approach suitable for expressing the results in a form close to natural language. Extending FRL with Fuzzy Rule Interpolation[[58]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-58) allows the use of reduced size sparse fuzzy rule-bases to emphasize cardinal rules (most important state-action values).  \n### Inverse reinforcement learning  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=21)]  \nIn inverse reinforcement learning (IRL), no reward function is given. Instead, the reward function is inferred given an observed behavior from an expert. The idea is to mimic observed behavior, which is often optimal or close to optimal.[[59]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-59) One popular IRL paradigm is named maximum entropy inverse reinforcement learning (MaxEnt IRL).[[60]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-60) MaxEnt IRL estimates the parameters of a linear model of the reward function by maximizing the entropy of the probability distribution of observed trajectories subject to constraints related to matching expected feature counts. Recently it has been shown that MaxEnt IRL is a particular case of a more general framework named random utility inverse reinforcement learning (RU-IRL).[[61]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-61) RU-IRL is based on [random utility theory](https://en.wikipedia.org/wiki/Random_utility_model) and Markov decision processes. While prior IRL approaches assume that the apparent random behavior of an observed agent is due to it following a random policy, RU-IRL assumes that the observed agent follows a deterministic policy but randomness in observed behavior is due to the fact that an observer only has partial access to the features the observedagent uses in decision making. The utility function is modeled as a random variable to account for the ignorance of the observer regarding the features the observed agent actually considers in its utility function.  \n### Safe reinforcement learning  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=23)]  \nSafe reinforcement learning (SRL) can be defined as the process of learning policies that maximize the expectation of the return in problems in which it is important to ensure reasonable system performance and/or respect safety constraints during the learning and/or deployment processes.[[64]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-64) An alternative approach is risk-averse reinforcement learning, where instead of the *expected* return, a *risk-measure* of the return is optimized, such as the [conditional value at risk](https://en.wikipedia.org/wiki/Expected_shortfall) (CVaR).[[65]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-65) In addition to mitigating risk, the CVaR objective increases robustness to model uncertainties.[[66]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-66)[[67]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-67) However, CVaR optimization in risk-averse RL requires special care, to prevent gradient bias[[68]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-68) and blindness to success.[[69]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-69)  \n### Self-reinforcement learning  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=24)]  \nSelf-reinforcement learning (or self-learning), is a learning paradigm which does not use the concept of immediate reward  after transition from  to  with action . It does not use an external reinforcement, it only uses the agent internal self-reinforcement. The internal self-reinforcement is provided by mechanism of feelings and emotions. In the learning process emotions are backpropagated by a mechanism of secondary reinforcement. The learning equation does not include the immediate reward, it only includes the state evaluation.  \nThe self-reinforcement algorithm updates a memory matrix  such that in each iteration executes the following machine learning routine:  \n1. In situation  perform action .  \n1. Receive a consequence situation .  \n1. Compute state evaluation  of how good is to be in the consequence situation .  \n1. Update crossbar memory .  \nInitial conditions of the memory are received as input from the genetic environment. It is a system with only one input (situation), and only one output (action, or behavior).  \nSelf-reinforcement (self-learning) was introduced in 1982 along with a neural networkcapable of self-reinforcement learning, named Crossbar Adaptive Array (CAA).[[70]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-70)[[71]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-71) The CAA computes, in a crossbar fashion, both decisions about actions and emotions (feelings) about consequence states. The system is driven by the interaction between cognition and emotion.[[72]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-72)  \n### Reinforcement Learning in Natural Language Processing  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=25)]  \nIn recent years, Reinforcement learning has become a significant concept in [Natural Language Processing (NLP)](https://en.wikipedia.org/wiki/Natural_language_processing), where tasks are often sequential decision-making rather than static classification. Reinforcement learning is where an agent take actions in an environment to maximize the accumulation of rewards. This framework is best fit for many NLP tasks, including dialogue generation, text summarization, and machine translation, where the quality of the output depends on optimizing long-term or human-centered goals rather than the prediction of single correct label.  \nEarly application of RL in NLP emerged in dialogue systems, where conversation was determined as a series of actions optimized for fluency and coherence. These early attempts, including policy gradient and sequence-level training techniques, laid a foundation for the broader application of reinforcement learning to other areas of NLP.  \nA major breakthrough happened with the introduction of [Reinforcement Learning from Human Feedback (RLHF)](https://en.wikipedia.org/wiki/Reinforcement_learning_from_human_feedback), a method in which human feedbacks are used to train a reward model that guides the RL agent. Unlike traditional rule-based or supervised systems, RLHF allows models to align their behavior with human judgments on complex and subjective tasks. This technique was initially used in the development of [InstructGPT](https://en.wikipedia.org/wiki/InstructGPT), an effective language model trained to follow human instructions and later in [ChatGPT](https://en.wikipedia.org/wiki/ChatGPT) which incorporates RLHF for improving output responses and ensuring safety.  \nMore recently, researchers have explored the use of offline RL in NLP to improve dialogue systems without the need of live human interaction. These methods optimize for user engagement, coherence, and diversity based on past conversation logs and pre-trained reward models.  \n## Statistical comparison of reinforcement learning algorithms  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=26)]  \nEfficient comparison of RL algorithms is essential for research, deployment and monitoring of RL systems.To compare different algorithms on a given environment, an agent can be trained for each algorithm. Since the performance is sensitive to implementation details, all algorithms should be implemented as closelyas possible to each other.[[73]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-73) After the training is finished, the agents can be run on a sample of test episodes, and their scores (returns) can be compared. Since episodes are typically assumed to be [i.i.d](https://en.wikipedia.org/wiki/I.i.d), standard statistical tools can be used for hypothesis testing, such as [T-test](https://en.wikipedia.org/wiki/Student%27s_t-test) and [permutation test](https://en.wikipedia.org/wiki/Permutation_test).[[74]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-74) This requires to accumulate all the rewards within an episode into a single numberâ€”the episodic return. However, this causes a loss of information, as different time-steps are averaged together, possibly with different levels of noise. Whenever the noise level varies across the episode, the statistical power can be improved significantly, by weighting the rewards according to their estimated noise.[[75]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-75)  \n## Challenges and Limitations  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=27)]  \nDespite significant advancements, reinforcement learning (RL) continues to face several challenges and limitations that hinder its widespread application in real-world scenarios.  \n### Sample Inefficiency  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=28)]  \nRL algorithms often require a large number of interactions with the environment to learn effective policies, leading to high computational costs and time-intensive to train the agent. For instance, [OpenAI\'s](https://en.wikipedia.org/wiki/OpenAI) Dota-playing bot utilized thousands of years of simulated gameplay to achieve human-level performance. Techniques like experience replay and [curriculum learning](https://en.wikipedia.org/wiki/Curriculum_learning) have been proposed to deprive sample inefficiency, but these techniques add more complexity and are not always sufficient for real-world applications.  \n### Stability and Convergence Issues  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=29)]  \nTraining RL models, particularly for [deep neural network-based models](https://en.wikipedia.org/wiki/Deep_learning), can be unstable and prone to divergence. A small change in the policy or environment can lead to extreme fluctuations in performance, making it difficult to achieve consistent results. This instability is further enhanced in the case of the continuous or high-dimensional action space, where the learning step becomes more complex and less predictable.  \n### Generalization and Transferability  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=30)]  \nThe RL agents trained in specific environments often struggle to generalize their learned policies to new, unseen scenarios. This is the major setback preventing the application of RL to dynamic real-world environments where adaptability is crucial. The challenge is to develop such algorithms that can transfer knowledge across tasks and environments without extensive retraining.  \n### Bias and Reward Function Issues  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=31)]  \nDesigning appropriate reward functions is critical in RL because poorly designed reward functions can lead to unintended behaviors. In addition, RL systems trained on biased data may perpetuate existing biases and lead to discriminatory or unfair outcomes. Both of these issues requires careful consideration ofreward structures and data sources to ensure fairness and desired behaviors.  \n## See also  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=32)]  \n- [Active learning (machine learning)](https://en.wikipedia.org/wiki/Active_learning_(machine_learning))  \n- [Apprenticeship learning](https://en.wikipedia.org/wiki/Apprenticeship_learning)  \n- [Error-driven learning](https://en.wikipedia.org/wiki/Error-driven_learning)  \n- [Model-free (reinforcement learning)](https://en.wikipedia.org/wiki/Model-free_(reinforcement_learning))  \n- [Multi-agent reinforcement learning](https://en.wikipedia.org/wiki/Multi-agent_reinforcement_learning)  \n- [Optimal control](https://en.wikipedia.org/wiki/Optimal_control)  \n- [Q-learning](https://en.wikipedia.org/wiki/Q-learning)  \n- [Reinforcement learning from human feedback](https://en.wikipedia.org/wiki/Reinforcement_learning_from_human_feedback)  \n- [Stateâ€“actionâ€“rewardâ€“stateâ€“action](https://en.wikipedia.org/wiki/State%E2%80%93action%E2%80%93reward%E2%80%93state%E2%80%93action) (SARSA)  \n- [Temporal difference learning](https://en.wikipedia.org/wiki/Temporal_difference_learning)  \n## References  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=33)]  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-kaelbling_1-0)[Kaelbling, Leslie P.](https://en.wikipedia.org/wiki/Leslie_P._Kaelbling); [Littman, Michael L.](https://en.wikipedia.org/wiki/Michael_L._Littman); [Moore, Andrew W.](https://en.wikipedia.org/w/index.php?title=Andrew_W._Moore&action=edit&redlink=1) (1996). ["Reinforcement Learning: A Survey"](http://webarchive.loc.gov/all/20011120234539/http://www.cs.washington.edu/research/jair/abstracts/kaelbling96a.html). *Journal of Artificial Intelligence Research*. **4**: 237â€“285. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[cs/9605103](https://arxiv.org/abs/cs/9605103). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1613/jair.301](https://doi.org/10.1613%2Fjair.301). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[1708582](https://api.semanticscholar.org/CorpusID:1708582). Archived from [the original](http://www.cs.washington.edu/research/jair/abstracts/kaelbling96a.html) on 2001-11-20.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-2) van Otterlo, M.; Wiering, M. (2012). "Reinforcement Learning and Markov Decision Processes". *Reinforcement Learning*. Adaptation, Learning, and Optimization. Vol.\xa012. pp.\xa03â€“42. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/978-3-642-27645-3_1](https://doi.org/10.1007%2F978-3-642-27645-3_1). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-3-642-27644-6](https://en.wikipedia.org/wiki/Special:BookSources/978-3-642-27644-6).  \n1. ^ [Jump up to: ](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-Li-2023_3-0)[***a***](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-Li-2023_3-0)[***b***](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-Li-2023_3-1) Li, Shengbo (2023). [*Reinforcement Learning for Sequential Decision and Optimal Control*](https://link.springer.com/book/10.1007/978-981-19-7784-8) (First\xa0ed.). SpringerVerlag, Singapore. pp.\xa01â€“460. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/978-981-19-7784-8](https://doi.org/10.1007%2F978-981-19-7784-8). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-9-811-97783-1](https://en.wikipedia.org/wiki/Special:BookSources/978-9-811-97783-1). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[257928563](https://api.semanticscholar.org/CorpusID:257928563).`{{[cite book](https://en.wikipedia.org/wiki/Template:Cite_book)}}`: CS1 maint: locationmissing publisher ([link](https://en.wikipedia.org/wiki/Category:CS1_maint:_location_missing_publisher))  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-4) Russell, Stuart J.; Norvig, Peter (2010). *Artificial intelligence\xa0: a modern approach* (Third\xa0ed.). Upper Saddle River, New Jersey: [Prentice Hall](https://en.wikipedia.org/wiki/Prentice_Hall). pp.\xa0830, 831. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-0-13-604259-4](https://en.wikipedia.org/wiki/Special:BookSources/978-0-13-604259-4).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-5) Lee, Daeyeol; Seo, Hyojung; Jung, Min Whan (21 July 2012). ["Neural Basis of Reinforcement Learning and Decision Making"](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3490621). *Annual Review of Neuroscience*. **35** (1): 287â€“308. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1146/annurev-neuro-062111-150512](https://doi.org/10.1146%2Fannurev-neuro-062111-150512). [PMC](https://en.wikipedia.org/wiki/PMC_(identifier))[3490621](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3490621). [PMID](https://en.wikipedia.org/wiki/PMID_(identifier))[22462543](https://pubmed.ncbi.nlm.nih.gov/22462543).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-6) Salazar Duque, Edgar Mauricio; Giraldo, Juan S.; Vergara, Pedro P.; Nguyen, Phuong; Van Der Molen, Anne; Slootweg, Han (2022). ["Community energy storage operation via reinforcement learning with eligibility traces"](https://doi.org/10.1016%2Fj.epsr.2022.108515). *Electric Power Systems Research*. **212**. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier)):[2022EPSR..21208515S](https://ui.adsabs.harvard.edu/abs/2022EPSR..21208515S). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1016/j.epsr.2022.108515](https://doi.org/10.1016%2Fj.epsr.2022.108515). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[250635151](https://api.semanticscholar.org/CorpusID:250635151).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-7) Xie, Zhaoming; Hung Yu Ling; Nam Hee Kim; Michiel van de Panne (2020). "ALLSTEPS: Curriculum-driven Learning of Stepping Stone Skills". [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2005.04323](https://arxiv.org/abs/2005.04323) [[cs.GR](https://arxiv.org/archive/cs.GR)].  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-8) Vergara, Pedro P.; Salazar, Mauricio; Giraldo, Juan S.; Palensky, Peter (2022). ["Optimal dispatch of PV inverters in unbalanced distribution systems using Reinforcement Learning"](https://doi.org/10.1016%2Fj.ijepes.2021.107628). *International Journal of Electrical Power & Energy Systems*. **136**. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier)):[2022IJEPE.13607628V](https://ui.adsabs.harvard.edu/abs/2022IJEPE.13607628V). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1016/j.ijepes.2021.107628](https://doi.org/10.1016%2Fj.ijepes.2021.107628). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[244099841](https://api.semanticscholar.org/CorpusID:244099841).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-FOOTNOTESuttonBarto2018Chapter_11_9-0)[Sutton & Barto 2018](https://en.wikipedia.org/wiki/Reinforcement_learning#CITEREFSuttonBarto2018), Chapter 11.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-Ren-2022_10-0) Ren, Yangang; Jiang, Jianhua; Zhan, Guojian; Li, Shengbo Eben; Chen, Chen; Li, Keqiang; Duan, Jingliang (2022). ["Self-Learned Intelligence for Integrated Decision and Control of Automated Vehicles at Signalized Intersections"](https://ieeexplore.ieee.org/document/9857655). *IEEE Transactions on Intelligent Transportation Systems*. **23** (12): 24145â€“24156. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2110.12359](https://arxiv.org/abs/2110.12359). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1109/TITS.2022.3196167](https://doi.org/10.1109%2FTITS.2022.3196167).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-11)[Gosavi, Abhijit](https://en.wikipedia.org/w/index.php?title=Abhijit_Gosavi&action=edit&redlink=1) (2003). [*Simulation-based Optimization: Parametric Optimization Techniques and Reinforcement*](https://www.springer.com/mathematics/applications/book/978-1-4020-7454-7). Operations Research/Computer Science Interfaces Series. Springer.[ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-1-4020-7454-7](https://en.wikipedia.org/wiki/Special:BookSources/978-1-4020-7454-7).  \n1. ^ [Jump up to: ](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-Optimal_adaptive_policies_for_Marko_12-0)[***a***](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-Optimal_adaptive_policies_for_Marko_12-0)[***b***](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-Optimal_adaptive_policies_for_Marko_12-1) Burnetas, Apostolos N.; [Katehakis, Michael N.](https://en.wikipedia.org/wiki/Michael_N._Katehakis) (1997), "Optimal adaptive policies for Markov Decision Processes", [*Mathematics of Operations Research*](https://en.wikipedia.org/wiki/Mathematics_of_Operations_Research), **22** (1): 222â€“255, [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1287/moor.22.1.222](https://doi.org/10.1287%2Fmoor.22.1.222), [JSTOR](https://en.wikipedia.org/wiki/JSTOR_(identifier))[3690147](https://www.jstor.org/stable/3690147)  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-13) Tokic, Michel; Palm, GÃ¼nther (2011), ["Value-Difference Based Exploration: Adaptive Control Between Epsilon-Greedy and Softmax"](http://www.tokic.com/www/tokicm/publikationen/papers/KI2011.pdf) (PDF), *KI 2011: Advances in Artificial Intelligence*, Lecture Notes in Computer Science, vol.\xa07006, Springer, pp.\xa0335â€“346, [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-3-642-24455-1](https://en.wikipedia.org/wiki/Special:BookSources/978-3-642-24455-1)  \n1. ^ [Jump up to: ](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-:0_14-0)[***a***](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-:0_14-0)[***b***](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-:0_14-1)[***c***](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-:0_14-2)["Reinforcement learning: An introduction"](https://web.archive.org/web/20170712170739/http://people.inf.elte.hu/lorincz/Files/RL_2006/SuttonBook.pdf) (PDF). Archived from [the original](http://people.inf.elte.hu/lorincz/Files/RL_2006/SuttonBook.pdf) (PDF) on 2017-07-12. Retrieved 2017-07-23.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-15) Singh, Satinder P.; Sutton, Richard S. (1996-03-01). ["Reinforcement learning with replacing eligibility traces"](https://link.springer.com/article/10.1007/BF00114726). *Machine Learning*. **22** (1): 123â€“158. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/BF00114726](https://doi.org/10.1007%2FBF00114726). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier))[1573-0565](https://search.worldcat.org/issn/1573-0565).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-16)[Sutton, Richard S.](https://en.wikipedia.org/wiki/Richard_S._Sutton) (1984). [*Temporal Credit Assignment in Reinforcement Learning*](https://web.archive.org/web/20170330002227/http://incompleteideas.net/sutton/publications.html#PhDthesis) (PhD thesis). University of Massachusetts, Amherst, MA. Archived from [the original](http://incompleteideas.net/sutton/publications.html#PhDthesis) on 2017-03-30. Retrieved 2017-03-29.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-FOOTNOTESuttonBarto2018[httpincompleteideasnetsuttonbookebooknode60html_%C2%A76._Temporal-Difference_Learning]_17-0)[Sutton & Barto 2018](https://en.wikipedia.org/wiki/Reinforcement_learning#CITEREFSuttonBarto2018), [Â§6. Temporal-Difference Learning](http://incompleteideas.net/sutton/book/ebook/node60.html).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-18)[Bradtke, Steven J.](https://en.wikipedia.org/w/index.php?title=Steven_J._Bradtke&action=edit&redlink=1); [Barto, Andrew G.](https://en.wikipedia.org/wiki/Andrew_G._Barto) (1996). "Learning to predict by the method of temporal differences". *Machine Learning*. **22**: 33â€“57. [CiteSeerX](https://en.wikipedia.org/wiki/CiteSeerX_(identifier))[10.1.1.143.857](https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.143.857). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1023/A:1018056104778](https://doi.org/10.1023%2FA%3A1018056104778). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[20327856](https://api.semanticscholar.org/CorpusID:20327856).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-19)[Watkins, Christopher J.C.H.](https://en.wikipedia.org/w/index.php?title=Christopher_J.C.H._Watkins&action=edit&redlink=1) (1989). [*Learning from Delayed Rewards*](http://www.cs.rhul.ac.uk/~chrisw/new_thesis.pdf) (PDF)(PhD thesis). King\'s College, Cambridge, UK.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-MBK_20-0) Matzliach, Barouch; Ben-Gal, Irad; Kagan, Evgeny (2022). ["Detection of Static and Mobile Targets by an Autonomous Agent with Deep Q-Learning Abilities"](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9407070). *Entropy*. **24** (8): 1168. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier)):[2022Entrp..24.1168M](https://ui.adsabs.harvard.edu/abs/2022Entrp..24.1168M). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.3390/e24081168](https://doi.org/10.3390%2Fe24081168). [PMC](https://en.wikipedia.org/wiki/PMC_(identifier))[9407070](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9407070). [PMID](https://en.wikipedia.org/wiki/PMID_(identifier))[36010832](https://pubmed.ncbi.nlm.nih.gov/36010832).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-21)[Williams, Ronald J.](https://en.wikipedia.org/wiki/Ronald_J._Williams) (1987). "A class of gradient-estimating algorithms for reinforcement learning in neural networks". *Proceedings of the IEEE First International Conference on Neural Networks*. [CiteSeerX](https://en.wikipedia.org/wiki/CiteSeerX_(identifier))[10.1.1.129.8871](https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.129.8871).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-22)[Peters, Jan](https://en.wikipedia.org/wiki/Jan_Peters_(computer_scientist)); [Vijayakumar, Sethu](https://en.wikipedia.org/wiki/Sethu_Vijayakumar); [Schaal, Stefan](https://en.wikipedia.org/wiki/Stefan_Schaal) (2003). [*Reinforcement Learning for Humanoid Robotics*](http://web.archive.org/web/20130512223911/http://www-clmc.usc.edu/publications/p/peters-ICHR2003.pdf) (PDF). IEEE-RAS International Conference on Humanoid Robots. Archived from [the original](http://www-clmc.usc.edu/publications/p/peters-ICHR2003.pdf) (PDF) on 2013-05-12.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-23) Juliani, Arthur (2016-12-17). ["SimpleReinforcement Learning with Tensorflow Part 8: Asynchronous Actor-Critic Agents (A3C)"](https://medium.com/emergent-future/simple-reinforcement-learning-with-tensorflow-part-8-asynchronous-actor-critic-agents-a3c-c88f72a5e9f2). *Medium*. Retrieved 2018-02-22.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-24)[Deisenroth, Marc Peter](https://en.wikipedia.org/w/index.php?title=Marc_Peter_Deisenroth&action=edit&redlink=1); Neumann, Gerhard; [Peters, Jan](https://en.wikipedia.org/wiki/Jan_Peters_(computer_scientist)) (2013). [*A Survey on Policy Search for Robotics*](http://eprints.lincoln.ac.uk/28029/1/PolicySearchReview.pdf) (PDF). Foundations and Trends in Robotics. Vol.\xa02. NOW Publishers. pp.\xa01â€“142. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1561/2300000021](https://doi.org/10.1561%2F2300000021). [hdl](https://en.wikipedia.org/wiki/Hdl_(identifier)):[10044/1/12051](https://hdl.handle.net/10044%2F1%2F12051).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-25) Sutton, Richard (1990). "Integrated Architectures for Learning, Planning and Reacting based on Dynamic Programming". *Machine Learning: Proceedings of the Seventh International Workshop*.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-26) Lin, Long-Ji (1992). ["Self-improving reactive agents based on reinforcement learning, planning and teaching"](https://link.springer.com/content/pdf/10.1007/BF00992699.pdf) (PDF). *Machine Learning*. Vol.\xa08. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/BF00992699](https://doi.org/10.1007%2FBF00992699).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-27) Zou, Lan (2023-01-01), Zou, Lan (ed.), ["Chapter 7 - Meta-reinforcement learning"](https://www.sciencedirect.com/science/article/pii/B9780323899314000110), *Meta-Learning*, Academic Press, pp.\xa0267â€“297, [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1016/b978-0-323-89931-4.00011-0](https://doi.org/10.1016%2Fb978-0-323-89931-4.00011-0), [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-0-323-89931-4](https://en.wikipedia.org/wiki/Special:BookSources/978-0-323-89931-4), retrieved 2023-11-08  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-28) van Hasselt, Hado; Hessel, Matteo; Aslanides, John (2019). ["When to use parametric models in reinforcement learning?"](https://proceedings.neurips.cc/paper/2019/file/1b742ae215adf18b75449c6e272fd92d-Paper.pdf) (PDF). *Advances in Neural Information Processing Systems*. Vol.\xa032.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-29) Grondman, Ivo; Vaandrager, Maarten; Busoniu, Lucian; Babuska, Robert; Schuitema, Erik (2012-06-01). ["Efficient Model Learning Methods for Actorâ€“Critic Control"](https://dl.acm.org/doi/10.1109/TSMCB.2011.2170565). *IEEE Transactions on Systems, Man, and Cybernetics - Part B: Cybernetics*. **42** (3): 591â€“602. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1109/TSMCB.2011.2170565](https://doi.org/10.1109%2FTSMCB.2011.2170565). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier))[1083-4419](https://search.worldcat.org/issn/1083-4419). [PMID](https://en.wikipedia.org/wiki/PMID_(identifier))[22156998](https://pubmed.ncbi.nlm.nih.gov/22156998).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-30)["On the Use of Reinforcement Learning for Testing Game Mechanics\xa0: ACM - Computers in Entertainment"](https://cie.acm.org/articles/use-reinforcements-learning-testing-game-mechanics/). *cie.acm.org*. Retrieved 2018-11-27.\n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-31) Riveret, Regis; Gao, Yang (2019). "A probabilistic argumentation framework for reinforcement learning agents". *Autonomous Agents and Multi-Agent Systems*. **33** (1â€“2): 216â€“274. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/s10458-019-09404-2](https://doi.org/10.1007%2Fs10458-019-09404-2). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[71147890](https://api.semanticscholar.org/CorpusID:71147890).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-32) Haramati,Dan; Daniel, Tal; Tamar, Aviv (2024). "Entity-Centric Reinforcement Learning for Object Manipulation from Pixels". [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2404.01220](https://arxiv.org/abs/2404.01220) [[cs.RO](https://arxiv.org/archive/cs.RO)].  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-33) Thompson, Isaac Symes; Caron, Alberto; Hicks, Chris; Mavroudis, Vasilios (2024-11-07). "Entity-based Reinforcement Learning for Autonomous Cyber Defence". *Proceedings of the Workshop on Autonomous Cybersecurity (AutonomousCyber \'24)*. ACM. pp.\xa056â€“67. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2410.17647](https://arxiv.org/abs/2410.17647). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1145/3689933.3690835](https://doi.org/10.1145%2F3689933.3690835).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-34) Winter, Clemens (2023-04-14). ["Entity-Based Reinforcement Learning"](https://clemenswinter.com/2023/04/14/entity-based-reinforcement-learning/). *Clemens Winter\'s Blog*.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-35) Yamagata, Taku; McConville, Ryan; Santos-Rodriguez, Raul (2021-11-16). "Reinforcement Learning with Feedback from Multiple Humans with Diverse Skills". [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2111.08596](https://arxiv.org/abs/2111.08596) [[cs.LG](https://arxiv.org/archive/cs.LG)].  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-36) Kulkarni, Tejas D.; Narasimhan, Karthik R.; Saeedi, Ardavan; Tenenbaum, Joshua B. (2016). ["Hierarchical Deep Reinforcement Learning: Integrating Temporal Abstraction and Intrinsic Motivation"](http://dl.acm.org/citation.cfm?id=3157382.3157509). *Proceedings of the 30th International Conference on Neural Information Processing Systems*. NIPS\'16. USA: Curran Associates Inc.: 3682â€“3690. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1604.06057](https://arxiv.org/abs/1604.06057). [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier)):[2016arXiv160406057K](https://ui.adsabs.harvard.edu/abs/2016arXiv160406057K). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-1-5108-3881-9](https://en.wikipedia.org/wiki/Special:BookSources/978-1-5108-3881-9).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-37)["Reinforcement Learning / Successes of Reinforcement Learning"](http://umichrl.pbworks.com/Successes-of-Reinforcement-Learning/). *umichrl.pbworks.com*. Retrieved 2017-08-06.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-38) Dey, Somdip; Singh, Amit Kumar; Wang, Xiaohang; McDonald-Maier, Klaus (March 2020). ["User Interaction Aware Reinforcement Learning for Power and Thermal Efficiency of CPU-GPU Mobile MPSoCs"](https://ieeexplore.ieee.org/document/9116294). [*2020 Design, Automation & Test in Europe Conference & Exhibition (DATE)*](http://repository.essex.ac.uk/27546/1/User%20Interaction%20Aware%20Reinforcement%20Learning.pdf) (PDF). pp.\xa01728â€“1733. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.23919/DATE48585.2020.9116294](https://doi.org/10.23919%2FDATE48585.2020.9116294). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-3-9819263-4-7](https://en.wikipedia.org/wiki/Special:BookSources/978-3-9819263-4-7). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[219858480](https://api.semanticscholar.org/CorpusID:219858480).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-39) Quested, Tony. ["Smartphones get smarter with Essex innovation"](https://www.businessweekly.co.uk/news/academia-research/smartphones-get-smarter-essex-innovation). *Business Weekly*. Retrieved 2021-06-17.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-40) Williams, Rhiannon (2020-07-21). ["Future smartphones \'will prolong their own battery life by monitoring owners\' behaviour\'"](https://inews.co.uk/news/technology/future-smartphones-prolong-battery-life-monitoring-behaviour-558689). [*i*](https://en.wikipedia.org/wiki/I_(British_newspaper)). Retrieved 2021-06-17.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-kaplan2004_41-0) Kaplan, F.; Oudeyer, P. (2004). "Maximizing Learning Progress: An Internal Reward System for Development". In Iida, F.; Pfeifer, R.; Steels, L.; Kuniyoshi, Y. (eds.). *Embodied Artificial Intelligence*. Lecture Notes in Computer Science. Vol.\xa03139. Berlin; Heidelberg: Springer. pp.\xa0259â€“270. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/978-3-540-27833-7_19](https://doi.org/10.1007%2F978-3-540-27833-7_19). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-3-540-22484-6](https://en.wikipedia.org/wiki/Special:BookSources/978-3-540-22484-6). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[9781221](https://api.semanticscholar.org/CorpusID:9781221).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-klyubin2008_42-0) Klyubin, A.; Polani, D.; Nehaniv, C. (2008). ["Keep your options open: an information-based driving principle for sensorimotor systems"](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2607028). *PLOS ONE*. **3** (12): e4018. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier)):[2008PLoSO...3.4018K](https://ui.adsabs.harvard.edu/abs/2008PLoSO...3.4018K). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1371/journal.pone.0004018](https://doi.org/10.1371%2Fjournal.pone.0004018). [PMC](https://en.wikipedia.org/wiki/PMC_(identifier))[2607028](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2607028). [PMID](https://en.wikipedia.org/wiki/PMID_(identifier))[19107219](https://pubmed.ncbi.nlm.nih.gov/19107219).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-barto2013_43-0) Barto, A. G. (2013). "Intrinsic motivation and reinforcement learning". [*Intrinsically Motivated Learning in Natural and Artificial Systems*](https://people.cs.umass.edu/~barto/IMCleVer-chapter-totypeset2.pdf) (PDF). Berlin; Heidelberg: Springer. pp.\xa017â€“47.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-44) DabÃ©rius, Kevin; Granat, Elvin; Karlsson, Patrik (2020). "Deep Execution - Value and Policy Based Reinforcement Learning for Trading and Beating Market Benchmarks". *The Journal of Machine Learning in Finance*. **1**. [SSRN](https://en.wikipedia.org/wiki/SSRN_(identifier))[3374766](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3374766).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-45) George Karimpanal, Thommen; Bouffanais, Roland (2019). "Self-organizing maps for storage and transfer of knowledge in reinforcement learning". *Adaptive Behavior*. **27** (2): 111â€“126. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1811.08318](https://arxiv.org/abs/1811.08318). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1177/1059712318818568](https://doi.org/10.1177%2F1059712318818568). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier))[1059-7123](https://search.worldcat.org/issn/1059-7123). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[53774629](https://api.semanticscholar.org/CorpusID:53774629).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-46) cf. [Sutton & Barto 2018](https://en.wikipedia.org/wiki/Reinforcement_learning#CITEREFSuttonBarto2018), Section 5.4, p. 100  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-47) J Duan; YGuan; S Li (2021). ["Distributional Soft Actor-Critic: Off-policy reinforcement learning for addressing value estimation errors"](https://ieeexplore.ieee.org/document/9448360). *IEEE Transactions on Neural Networks and Learning Systems*. **33** (11): 6584â€“6598. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2001.02811](https://arxiv.org/abs/2001.02811). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1109/TNNLS.2021.3082568](https://doi.org/10.1109%2FTNNLS.2021.3082568). [PMID](https://en.wikipedia.org/wiki/PMID_(identifier))[34101599](https://pubmed.ncbi.nlm.nih.gov/34101599). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[211259373](https://api.semanticscholar.org/CorpusID:211259373).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-48) Y Ren; J Duan; S Li (2020). ["Improving Generalization of Reinforcement Learning with Minimax Distributional Soft Actor-Critic"](https://ieeexplore.ieee.org/document/9294300). *2020 IEEE 23rd International Conferenceon Intelligent Transportation Systems (ITSC)*. pp.\xa01â€“6. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2002.05502](https://arxiv.org/abs/2002.05502). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1109/ITSC45102.2020.9294300](https://doi.org/10.1109%2FITSC45102.2020.9294300). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-1-7281-4149-7](https://en.wikipedia.org/wiki/Special:BookSources/978-1-7281-4149-7). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[211096594](https://api.semanticscholar.org/CorpusID:211096594).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-49) Duan, J; Wang, W; Xiao, L (2025). "Distributional Soft Actor-Critic with Three Refinements". *IEEE Transactions on Pattern Analysis and Machine Intelligence*. **PP** (5): 3935â€“3946. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2310.05858](https://arxiv.org/abs/2310.05858). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1109/TPAMI.2025.3537087](https://doi.org/10.1109%2FTPAMI.2025.3537087). [PMID](https://en.wikipedia.org/wiki/PMID_(identifier))[40031258](https://pubmed.ncbi.nlm.nih.gov/40031258).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-50) Soucek, Branko (6 May 1992). *Dynamic, Genetic and Chaotic Programming: The Sixth-Generation Computer Technology Series*. John Wiley & Sons, Inc. p.\xa038. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[0-471-55717-X](https://en.wikipedia.org/wiki/Special:BookSources/0-471-55717-X).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-intro_deep_RL_51-0) Francois-Lavet, Vincent; et\xa0al. (2018). "An Introduction to Deep Reinforcement Learning". *Foundations and Trends inMachine Learning*. **11** (3â€“4): 219â€“354. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1811.12560](https://arxiv.org/abs/1811.12560). [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier)):[2018arXiv181112560F](https://ui.adsabs.harvard.edu/abs/2018arXiv181112560F). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1561/2200000071](https://doi.org/10.1561%2F2200000071). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[54434537](https://api.semanticscholar.org/CorpusID:54434537).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-DQN2_52-0) Mnih, Volodymyr; et\xa0al. (2015). "Human-level control through deep reinforcement learning". *Nature*. **518** (7540): 529â€“533. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier)):[2015Natur.518..529M](https://ui.adsabs.harvard.edu/abs/2015Natur.518..529M). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1038/nature14236](https://doi.org/10.1038%2Fnature14236). [PMID](https://en.wikipedia.org/wiki/PMID_(identifier))[25719670](https://pubmed.ncbi.nlm.nih.gov/25719670). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[205242740](https://api.semanticscholar.org/CorpusID:205242740).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-53) Goodfellow, Ian; Shlens, Jonathan; Szegedy, Christian (2015). "Explaining and Harnessing Adversarial Examples". *International Conference on Learning Representations*. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1412.6572](https://arxiv.org/abs/1412.6572).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-54) Behzadan, Vahid; Munir, Arslan (2017). "Vulnerability of Deep Reinforcement Learning to Policy Induction Attacks". *Machine Learning and Data Mining in Pattern Recognition*. Lecture Notes in Computer Science. Vol.\xa010358. pp.\xa0262â€“275. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1701.04143](https://arxiv.org/abs/1701.04143). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/978-3-319-62416-7_19](https://doi.org/10.1007%2F978-3-319-62416-7_19). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-3-319-62415-0](https://en.wikipedia.org/wiki/Special:BookSources/978-3-319-62415-0). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[1562290](https://api.semanticscholar.org/CorpusID:1562290).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-55) Huang, Sandy; Papernot, Nicolas; Goodfellow, Ian; Duan, Yan; Abbeel, Pieter (2017-02-07). [*Adversarial Attacks on Neural Network Policies*](http://worldcat.org/oclc/1106256905). [OCLC](https://en.wikipedia.org/wiki/OCLC_(identifier))[1106256905](https://search.worldcat.org/oclc/1106256905).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-56) Korkmaz, Ezgi (2022). ["Deep Reinforcement Learning Policies Learn Shared Adversarial Features Across MDPs"](https://doi.org/10.1609%2Faaai.v36i7.20684). *Thirty-Sixth AAAI Conference on Artificial Intelligence (AAAI-22)*. **36** (7): 7229â€“7238. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2112.09025](https://arxiv.org/abs/2112.09025). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1609/aaai.v36i7.20684](https://doi.org/10.1609%2Faaai.v36i7.20684). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[245219157](https://api.semanticscholar.org/CorpusID:245219157).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-57) Berenji, H.R. (1994). ["Fuzzy Q-learning: A new approach for fuzzy dynamic programming"](https://ieeexplore.ieee.org/document/343737). *Proceedings of 1994 IEEE 3rd International Fuzzy Systems Conference*. Orlando, FL, USA: IEEE. pp.\xa0486â€“491. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1109/FUZZY.1994.343737](https://doi.org/10.1109%2FFUZZY.1994.343737). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[0-7803-1896-X](https://en.wikipedia.org/wiki/Special:BookSources/0-7803-1896-X). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[56694947](https://api.semanticscholar.org/CorpusID:56694947).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-58) Vincze, David (2017). ["Fuzzy rule interpolation and reinforcement learning"](http://users.iit.uni-miskolc.hu/~vinczed/research/vinczed_sami2017_author_draft.pdf) (PDF). *2017 IEEE 15th International Symposium on Applied Machine Intelligence and Informatics (SAMI)*. IEEE. pp.\xa0173â€“178. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1109/SAMI.2017.7880298](https://doi.org/10.1109%2FSAMI.2017.7880298). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-1-5090-5655-2](https://en.wikipedia.org/wiki/Special:BookSources/978-1-5090-5655-2). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[17590120](https://api.semanticscholar.org/CorpusID:17590120).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-59) Ng, A. Y.; Russell, S. J. (2000). ["Algorithms for Inverse Reinforcement Learning"](https://ai.stanford.edu/~ang/papers/icml00-irl.pdf) (PDF). *Proceeding ICML \'00 Proceedings of the Seventeenth International Conference on Machine Learning*. Morgan Kaufmann Publishers. pp.\xa0663â€“670. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[1-55860-707-2](https://en.wikipedia.org/wiki/Special:BookSources/1-55860-707-2).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-60) Ziebart, Brian D.; Maas, Andrew; Bagnell, J. Andrew; Dey, Anind K. (2008-07-13). ["Maximum entropy inverse reinforcement learning"](https://dl.acm.org/doi/10.5555/1620270.1620297). *Proceedings of the 23rd National Conference on Artificial Intelligence - Volume 3*. AAAI\'08. Chicago, Illinois: AAAI Press: 1433â€“1438. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-1-57735-368-3](https://en.wikipedia.org/wiki/Special:BookSources/978-1-57735-368-3). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[336219](https://api.semanticscholar.org/CorpusID:336219).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-61) Pitombeira-Neto, Anselmo R.; Santos, Helano P.; Coelho da Silva, Ticiana L.; de Macedo, JosÃ© Antonio F. (March 2024). ["Trajectory modeling via random utility inverse reinforcement learning"](https://doi.org/10.1016/j.ins.2024.120128). *Information Sciences*. **660**: 120128. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2105.12092](https://arxiv.org/abs/2105.12092). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1016/j.ins.2024.120128](https://doi.org/10.1016%2Fj.ins.2024.120128). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier))[0020-0255](https://search.worldcat.org/issn/0020-0255). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[235187141](https://api.semanticscholar.org/CorpusID:235187141).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-62) Hayes C, Radulescu R, Bargiacchi E, et\xa0al. (2022). ["A practical guide to multi-objective reinforcement learning and planning"](https://doi.org/10.1007%2Fs10458-022-09552-y). *Autonomous Agents and Multi-Agent Systems*. **36**. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2103.09568](https://arxiv.org/abs/2103.09568). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/s10458-022-09552-y](https://doi.org/10.1007%2Fs10458-022-09552-y). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[254235920](https://api.semanticscholar.org/CorpusID:254235920).,  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-63) Tzeng,Gwo-Hshiung; Huang, Jih-Jeng (2011). *Multiple Attribute Decision Making: Methods and Applications* (1st\xa0ed.). CRC Press. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[9781439861578](https://en.wikipedia.org/wiki/Special:BookSources/9781439861578).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-64) GarcÃ­a, Javier; FernÃ¡ndez, Fernando (1 January 2015). ["A comprehensive survey on safe reinforcement learning"](https://jmlr.org/papers/volume16/garcia15a/garcia15a.pdf) (PDF). *The Journal of Machine Learning Research*. **16** (1): 1437â€“1480.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-65) Dabney, Will; Ostrovski, Georg; Silver, David; Munos, Remi (2018-07-03). ["Implicit Quantile Networks for Distributional Reinforcement Learning"](https://proceedings.mlr.press/v80/dabney18a.html). *Proceedings of the 35th International Conference on Machine Learning*. PMLR: 1096â€“1105. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1806.06923](https://arxiv.org/abs/1806.06923).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-66) Chow, Yinlam; Tamar, Aviv; Mannor, Shie; Pavone, Marco (2015). ["Risk-Sensitive and Robust Decision-Making: a CVaR Optimization Approach"](https://proceedings.neurips.cc/paper/2015/hash/64223ccf70bbb65a3a4aceac37e21016-Abstract.html). *Advances in Neural Information Processing Systems*. **28**. Curran Associates, Inc. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1506.02188](https://arxiv.org/abs/1506.02188).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-67)["Train Hard, Fight Easy: Robust Meta Reinforcement Learning"](https://scholar.google.com/citations?view_op=view_citation&hl=en&user=LnwyFkkAAAAJ&citation_for_view=LnwyFkkAAAAJ%3AeQOLeE2rZwMC). *scholar.google.com*. Retrieved 2024-06-21.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-68) Tamar, Aviv; Glassner, Yonatan; Mannor, Shie (2015-02-21). ["Optimizing the CVaR via Sampling"](https://ojs.aaai.org/index.php/AAAI/article/view/9561). *Proceedings of the AAAI Conference on Artificial Intelligence*. **29** (1). [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1404.3862](https://arxiv.org/abs/1404.3862). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1609/aaai.v29i1.9561](https://doi.org/10.1609%2Faaai.v29i1.9561). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier))[2374-3468](https://search.worldcat.org/issn/2374-3468).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-69) Greenberg, Ido; Chow, Yinlam; Ghavamzadeh, Mohammad; Mannor, Shie (2022-12-06). ["Efficient Risk-Averse Reinforcement Learning"](https://proceedings.neurips.cc/paper_files/paper/2022/hash/d2511dfb731fa336739782ba825cd98c-Abstract-Conference.html). *Advances in Neural Information Processing Systems*. **35**: 32639â€“32652. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2205.05138](https://arxiv.org/abs/2205.05138).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-70) Bozinovski, S. (1982). "A self-learning system using secondary reinforcement". In Trappl, Robert (ed.). Cybernetics and Systems Research: Proceedings of the Sixth European Meeting on Cybernetics and Systems Research. North-Holland. pp. 397â€“402. ISBN 978-0-444-86488-8  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-71) Bozinovski S. (1995) "Neuro genetic agents and structural theory of self-reinforcement learning systems". CMPSCI Technical Report 95-107, University of Massachusetts at Amherst [[1]](https://web.cs.umass.edu/publication/docs/1995/UM-CS-1995-107.pdf)  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-72) Bozinovski, S. (2014) "Modeling mechanisms of cognition-emotion interaction in artificial neural networks, since 1981." Procedia Computer Science p. 255â€“263  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-73) Engstrom, Logan; Ilyas, Andrew; Santurkar, Shibani; Tsipras, Dimitris; Janoos, Firdaus; Rudolph, Larry; Madry, Aleksander (2019-09-25). ["Implementation Matters in Deep RL: A Case Study on PPO and TRPO"](https://openreview.net/forum?id=r1etN1rtPB). *ICLR*.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-74) Colas, CÃ©dric (2019-03-06). ["A Hitchhiker\'s Guide to Statistical Comparisons of Reinforcement Learning Algorithms"](https://openreview.net/forum?id=ryx0N3IaIV). *International Conference on Learning Representations*. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1904.06979](https://arxiv.org/abs/1904.06979).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-75) Greenberg, Ido; Mannor,Shie (2021-07-01). ["Detecting Rewards Deterioration in Episodic Reinforcement Learning"](https://proceedings.mlr.press/v139/greenberg21a.html). *Proceedings of the 38th International Conference on Machine Learning*. PMLR: 3842â€“3853. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2010.11660](https://arxiv.org/abs/2010.11660).  \n## Further reading  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=34)]  \n- Annaswamy, Anuradha M. (3 May 2023). ["Adaptive Control and Intersections with Reinforcement Learning"](https://doi.org/10.1146%2Fannurev-control-062922-090153). *Annual Review of Control, Robotics, and Autonomous Systems*. **6** (1): 65â€“93. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1146/annurev-control-062922-090153](https://doi.org/10.1146%2Fannurev-control-062922-090153). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier))[2573-5144](https://search.worldcat.org/issn/2573-5144). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[255702873](https://api.semanticscholar.org/CorpusID:255702873).  \n- [Auer, Peter](https://en.wikipedia.org/wiki/Peter_Auer); Jaksch, Thomas; Ortner, Ronald (2010). ["Near-optimal regret bounds for reinforcement learning"](http://jmlr.csail.mit.edu/papers/v11/jaksch10a.html). *Journal of Machine Learning Research*. **11**: 1563â€“1600.  \n- Bertsekas, DimitriP. (2023) [2019]. [*REINFORCEMENT LEARNING AND OPTIMAL CONTROL*](http://www.mit.edu/~dimitrib/RLbook.html) (1st\xa0ed.). Athena Scientific. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-1-886-52939-7](https://en.wikipedia.org/wiki/Special:BookSources/978-1-886-52939-7).  \n- Busoniu, Lucian; Babuska, Robert; [De Schutter, Bart](https://en.wikipedia.org/wiki/Bart_De_Schutter); Ernst, Damien (2010). [*Reinforcement Learning and Dynamic Programming using Function Approximators*](http://www.dcsc.tudelft.nl/rlbook/). Taylor & Francis CRC Press. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-1-4398-2108-4](https://en.wikipedia.org/wiki/Special:BookSources/978-1-4398-2108-4).  \n- FranÃ§ois-Lavet, Vincent; Henderson, Peter; Islam, Riashat; Bellemare, Marc G.; Pineau, Joelle (2018). "An Introduction to Deep Reinforcement Learning". *Foundations and Trends in Machine Learning*. **11** (3â€“4): 219â€“354. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1811.12560](https://arxiv.org/abs/1811.12560). [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier)):[2018arXiv181112560F](https://ui.adsabs.harvard.edu/abs/2018arXiv181112560F). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1561/2200000071](https://doi.org/10.1561%2F2200000071). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[54434537](https://api.semanticscholar.org/CorpusID:54434537).  \n- Li, Shengbo Eben (2023). [*Reinforcement Learning for Sequential Decision and Optimal Control*](https://link.springer.com/book/10.1007/978-981-19-7784-8) (1st\xa0ed.). Springer Verlag, Singapore. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/978-981-19-7784-8](https://doi.org/10.1007%2F978-981-19-7784-8). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-9-811-97783-1](https://en.wikipedia.org/wiki/Special:BookSources/978-9-811-97783-1).  \n- Powell, Warren (2011). [*Approximate dynamic programming: solving the curses of dimensionality*](https://web.archive.org/web/20160731230325/http://castlelab.princeton.edu/adp.htm). Wiley-Interscience. Archived from [the original](http://www.castlelab.princeton.edu/adp.htm) on 2016-07-31. Retrieved 2010-09-08.  \n- [Sutton, Richard S.](https://en.wikipedia.org/wiki/Richard_S._Sutton) (1988). ["Learning to predict by the methodof temporal differences"](https://doi.org/10.1007%2FBF00115009). *Machine Learning*. **3**: 9â€“44. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/BF00115009](https://doi.org/10.1007%2FBF00115009).  \n- [Sutton, Richard S.](https://en.wikipedia.org/wiki/Richard_S._Sutton); [Barto, Andrew G.](https://en.wikipedia.org/wiki/Andrew_Barto) (2018) [1998]. [*Reinforcement Learning: An Introduction*](http://incompleteideas.net/sutton/book/the-book.html) (2nd\xa0ed.). MIT Press. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-0-262-03924-6](https://en.wikipedia.org/wiki/Special:BookSources/978-0-262-03924-6).  \n- Szita, Istvan; Szepesvari, Csaba (2010). ["Model-based Reinforcement Learning with Nearly Tight Exploration Complexity Bounds"](https://web.archive.org/web/20100714095438/http://www.icml2010.org/papers/546.pdf) (PDF). *ICML 2010*. Omnipress. pp.\xa01031â€“1038. Archived from [the original](http://www.icml2010.org/papers/546.pdf) (PDF) on 2010-07-14.  \n## External links  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=35)]  \n- [Dissecting Reinforcement Learning](https://mpatacchiola.github.io/blog/2016/12/09/dissecting-reinforcement-learning.html) Series of blog post on reinforcement learning with Python code  \n- [A (Long) Peek into Reinforcement Learning](https://lilianweng.github.io/posts/2018-02-19-rl-overview/)  \n""",  # noqa: E501, RUF001
        "tool_call_id": "call_QIhN3b4Fg0xfOWJbPh0Fbebg",
        "name": "NotionToolkit_GetPageContentById",
    },
    {
        "role": "assistant",
        "content": """The page you requested provides a comprehensive overview of Reinforcement Learning (RL), an interdisciplinary area that combines concepts from machine learning and control theory. Reinforcement learning involves intelligent agents taking actions in dynamic environments to maximize some cumulative reward signal. Unlike supervised learning, RL does not require labeled input-output pairs and focuses on balancing exploration and exploitation to maximize long-term rewards.\n\nKey Concepts and Structure:\n\n1. **Principles**: RL is connected with various disciplines like game theory, control theory, and operations research. It focuses on Markov Decision Processes (MDPs) and seeks to find an optimal policy to maximize cumulative rewards.\n\n2. **Exploration**: RL requires mechanisms to balance exploration of new strategies with exploitation of known strategies. Techniques like the -greedy strategy are commonly used.\n\n3. **Algorithms**: RL comprises several key algorithms such as Monte Carlo methods, Temporal Difference methods, and others. Each addresses different aspects of the balance between exploration and learning.\n\n4. **Policy and Value Function**: Understanding policies and value functions is crucial. Policies guide action choices, while value functions estimate the quality of states or actions in terms of expected rewards.\n\n5. **Research and Applications**: RL has been applied in diverse domains including robotics, autonomous systems, and game playing. Current research explores areas like safe RL, multi-agent systems, and combining RL with fuzzy logic.\n\n6. **Challenges and Limitations**:\n    - **Sample Inefficiency**: RL often requires extensive interactions with the environment to learn effective policies.\n    - **Stability**: Training RL models can be unstable and sensitive to environmental changes.\n    - **Generalization**: RL models may struggle to transfer learned policies to new environments.\n\nThe document is a broad exploration of RL concepts, theory, applications, and challenges, helping readers understand the decisions and techniques central to RL and its role in modern artificial intelligence.""",  # noqa: E501
    },
]

LARGE_PAGE_CONTENT_TO_INSERT = """### Multi-objective reinforcement learning  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learningaction=edit&section=22)]  \nMulti-objective reinforcement learning (MORL) isa form of reinforcement learning concerned with conflicting alternatives. It is distinct from multi-objective optimization in that it isconcerned with agents acting in environments.[[62]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-62)[[63]](https://en.wikipedia.org/wikiReinforcement_learning#cite_note-63)  \n"""  # noqa: E501

UPDATED_LARGE_PAGE_CONTENT = """# [ðŸ”— link] â€” Reinforcement learning\nFor reinforcement learning in psychology, see [Reinforcement](https://en.wikipedia.org/wiki/Reinforcement) and [Operant conditioning](https://en.wikipedia.org/wiki/Operant_conditioning).  \nThe typical framing of a reinforcement learning (RL) scenario: an agenttakes actions in an environment, which is interpreted into a rewardand a state representation, which are fed back to the agent.  \n**Reinforcement learning** (**RL**) is an interdisciplinary area of [machinelearning](https://en.wikipedia.org/wiki/Machine_learning) and [optimal control](https://en.wikipedia.org/wiki/Optimal_control) concerned with how an [intelligent agent](https://en.wikipedia.org/wikiIntelligent_agent) should [take actions](https://en.wikipedia.org/wiki/Action_selection) in a dynamic environment in order to [maximize a reward](https://en.wikipedia.org/wikiReward-based_selection) signal. Reinforcement learning is one of the [three basic machine learning paradigms](https://en.wikipedia.org/wiki/Machine_learning#Approaches), alongside [supervised learning(https://en.wikipedia.org/wiki/Supervised_learning) and [unsupervised learning](https://en.wikipedia.org/wiki/Unsupervised_learning).  \nReinforcement learning differs from supervised learning in not needinglabelled input-output pairs to be presented, and in not needing sub-optimal actions to be explicitly corrected. Instead, the focus is on finding a balance between exploration (of uncharted territory) andexploitation (of current knowledge) with the goal of maximizing the cumulative reward (the feedback of which might be incomplete or delayed).[[1]](https://en.wikipedia.org/wikiReinforcement_learning#cite_note-kaelbling-1) The search for this balance is known as the [explorationâ€“exploitation dilemma](https://en.wikipedia.org/wiki/Exploration%E2%80%93exploitation_dilemma).  \nThe environment is typicallystated in the form of a [Markov decision process](https://en.wikipedia.org/wiki/Markov_decision_process) (MDP), as many reinforcement learning algorithms use [dynamic programming(https://en.wikipedia.org/wiki/Dynamic_programming) techniques.[[2]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-2) The main difference between classical dynamic programmingmethods and reinforcement learning algorithms is that the latter do not assume knowledge of an exact mathematical model of the Markov decision process, and they target large MDPs where exact methods become infeasible.[[3]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-Li-2023-3)  \n## Principles  \n[[edit](https://en.wikipedia.orgw/index.php?title=Reinforcement_learning&action=edit&section=1)] \nDue to its generality, reinforcement learning is studied in many disciplines, such as [game theory](https://en.wikipedia.org/wikiGame_theory), [control theory](https://en.wikipedia.org/wiki/Control_theory),[operations research](https://en.wikipedia.org/wiki/Operations_research), [information theory](https://en.wikipedia.org/wikiInformation_theory), [simulation-based optimization](https://en.wikipedia.org/wiki/Simulation-based_optimization), [multi-agent systems](https://en.wikipedia.org/wikiMulti-agent_system), [swarm intelligence](https://en.wikipedia.org/wiki/Swarm_intelligence), and [statistics](https://en.wikipedia.org/wiki/Statistics). In the operationsresearch and control literature, RL is called *approximate dynamicprogramming*, or *neuro-dynamic programming.* The problems of interest in RL have also been studied in the [theory of optimal control](https:/en.wikipedia.org/wiki/Optimal_control_theory), which is concerned mostly with the existence and characterization of optimal solutions, and algorithms for their exact computation, and less with learning orapproximation (particularly in the absence of a mathematical model of the environment).  \nBasic reinforcement learning is modeled as a [Markov decision process](https://en.wikipedia.org/wikiMarkov_decision_process):  \n- A set of environment and agent states (the state space),;  \n- A set of actions (the action space), , of the agent;  \n- , the transition probability (at time ) from state  to state  under action . \n- , the immediate reward after transition from  to  under action.  \nThe purpose of reinforcement learning is for the agent to learn an optimal (or near-optimal) policy that maximizes the reward function orother user-provided reinforcement signal that accumulates from immediate rewards. This is similar to [processes](https://en.wikipedia.org/wiki/Reinforcement) that appear to occur in animal psychology. Forexample, biological brains are hardwired to interpret signals such as pain and hunger as negative reinforcements, and interpret pleasure and food intake as positive reinforcements. In some circumstances,animals learn to adopt behaviors that optimize these rewards. This suggests that animals are capable of reinforcement learning.[[4]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-4)[[5](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-5)  \nA basic reinforcement learning agent interacts with its environment in discrete time steps. At each time step t, the agent receives the currentstate  and reward . It then chooses an action  from the set of available actions, which is subsequently sent to the environment. The environment moves to a new state  and the reward  associated with the*transition* is determined. The goal of a reinforcement learning agent is to learn a *policy*:  \nthat maximizes the expected cumulative reward.  \nFormulating the problem as a Markov decision process assumesthe agent directly observes the current environmental state; in this case, the problem is said to have *full observability*. If the agent only has access to a subset of states, or if the observed states arecorrupted by noise, the agent is said to have *partial observability*, and formally the problem must be formulated as a [partially observable Markov decision process](https://en.wikipedia.org/wikiPartially_observable_Markov_decision_process). In both cases, the set of actions available to the agent can be restricted. For example, the state of an account balance could be restricted to be positive; ifthe current value of the state is 3 and the state transition attempts to reduce the value by 4, the transition will not be allowed.  \nWhen the agent\'s performance is compared to that of an agent thatacts optimally, the difference in performance yields the notion of [regret](https://en.wikipedia.org/wiki/Regret_(decision_theory)). In order to act near optimally, the agent must reason about long-termconsequences of its actions (i.e., maximize future rewards), although theimmediate reward associated with this might be negative.  \nThus, reinforcement learning is particularly well-suited to problems that include along-term versus short-term reward trade-off. It has been appliedsuccessfully to various problems, including [energy storage](https://en.wikipedia.org/wiki/Energy_storage),[[6]](https://en.wikipedia.org/wikiReinforcement_learning#cite_note-6)[robot control](https://en.wikipedia.org/wiki/Robot_control),[[7]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-7)[photovoltaic generators](https://en.wikipedia.org/wiki/Photovoltaic_system),[[8]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-8[backgammon](https://en.wikipedia.org/wiki/Backgammon), [checkers](https://en.wikipedia.org/wiki/Checkers),[[9]](https://en.wikipedia.org/wikiReinforcement_learning#cite_note-FOOTNOTESuttonBarto2018Chapter_11-9)[Go](https://en.wikipedia.org/wiki/Go_(game)) ([AlphaGo](https://en.wikipedia.org/wiki/AlphaGo)), and [autonomous driving systems](https://en.wikipedia.org/wiki/Self-driving_car).[[10]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-Ren-2022-10) \nTwo elements make reinforcement learning powerful: the use of samples to optimize performance, and the use of [function approximation](https://en.wikipedia.org/wiki/Neural_network_(machine_learning)) todeal with large environments. Thanks to these two key components, RLcan be used in large environments in the following situations:  \n- A model of the environment is known, but an [analytic solution](https://enwikipedia.org/wiki/Closed-form_expression) is not available;  \n- Only a simulation model of the environment is given (the subject of [simulation-based optimization](https://en.wikipedia.org/wiki/Simulation-based_optimization));[[11]](https://en.wikipedia.org/wikiReinforcement_learning#cite_note-11)  \n- The only way to collect information about the environment is to interact with it.  \nThe first two of these problems could be considered planning problems (since some form of model isavailable), while the last one could be considered to be a genuine learning problem. However, reinforcement learning converts both planning problems to [machine learning](https://en.wikipedia.org/wikiMachine_learning) problems.  \n## Exploration  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=2)]  \nThe exploration vs. exploitationtrade-off has been most thoroughly studied through the [multi-armed bandit](https://en.wikipedia.org/wiki/Multi-armed_bandit) problem and for finite state space Markov decision processes in Burnetas andKatehakis (1997).[[12]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-Optimal_adaptive_policies_for_Marko-12)  \nReinforcement learningrequires clever exploration mechanisms; randomly selecting actions, without reference to an estimated probability distribution, shows poor performance. The case of (small) finite Markov decisionprocesses is relatively well understood. However, due to the lack of algorithms that scale well with the number of states (or scale to problems with infinite state spaces), simple exploration methods are the mostpractical.  \nOne such method is -greedy, where  is a parameter controlling the amount of exploration vs. exploitation. With probability , exploitation is chosen, and the agent chooses the action that itbelieves has the best long-term effect (ties between actions are broken uniformly at random). Alternatively, with probability , exploration is chosen, and the action is chosen uniformly at random.  is usuallya fixed parameter but can be adjusted either according to a schedule (making the agent explore progressively less), or adaptively based on heuristics.[[13]](https://en.wikipedia.org/wikiReinforcement_learning#cite_note-13)  \n## Algorithms for control learning  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=3)]  \nEven if the issue of exploration isdisregarded and even if the state was observable (assumed hereafter), the problem remains to use past experience to find out which actions lead to higher cumulative rewards.  \n### Criterion of optimality  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=4)]  \n### Policy  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=5)]  \nThe agent\'s action selection is modeledas a map called *policy*:   \nThe policy map gives the probability of taking action  when in state .[[14]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-:0-14):\u200a61  There arealso deterministic policies  for which  denotes the action that should be played at state .  \n### State-value function  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learningaction=edit&section=6)]  \nThe state-value function  is defined as, *expected discounted return* starting with state , i.e. , and successively following policy . Hence, roughly speaking, the value functionestimates "how good" it is to be in a given state.[[14]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-:0-14):\u200a60  \nwhere the random variable  denotes the**discounted return**, and is defined as the sum of future discounted rewards:  \nwhere  is the reward for transitioning from state  to ,  is the [discount rate](https://en.wikipedia.org/wikiQ-learning#Discount_factor).  is less than 1, so rewards in the distant future are weighted less than rewards in the immediate future.  \nThe algorithm must find a policy with maximum expected discounted return. From thetheory of Markov decision processes it is known that, without loss of generality, the search can be restricted to the set of so-called *stationary* policies. A policy is *stationary* if the action-distributionreturned by it depends only on the last state visited (from the observation agent\'s history). The search can be further restricted to *deterministic* stationary policies. A *deterministic stationary* policydeterministically selects actions based on the current state. Since any such policy can be identified with a mapping from the set of states to the set of actions, these policies can be identified with suchmappings with no loss of generality.  \n### Brute force  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=7)]  \nThe [brute force](https://en.wikipediaorg/wiki/Brute-force_search) approach entails two steps:  \n- For each possible policy, sample returns while following it  \n- Choose the policy with the largest expected discounted return  \nOne problem withthis is that the number of policies can be large, or even infinite. Another is that the variance of the returns may be large, which requires many samples to accurately estimate the discounted return ofeach policy.  \nThese problems can be ameliorated if we assume some structure and allow samples generated from one policy to influence the estimates made for others. The two main approaches for achievingthis are [value function estimation](https://en.wikipedia.org/wiki/Reinforcement_learning#Value_function) and [direct policy search](https://en.wikipedia.org/wikiReinforcement_learning#Direct_policy_search).  \n### Value function  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=8)]  \nSee also: [Value function](https://enwikipedia.org/wiki/Value_function)  \nValue function approaches attempt to find a policy that maximizes the discounted return by maintaining a set of estimates of expected discounted returns  for some policy(usually either the "current" [on-policy] or the optimal [off-policy] one).  \nThese methods rely on the theory of Markov decision processes, where optimality is defined in a sense stronger than theone above: A policy is optimal if it achieves the best-expected discounted return from *any* initial state (i.e., initial distributions play no role in this definition). Again, an optimal policy can alwaysbe found among stationary policies.  \nTo define optimality in a formal manner, define the state-value of a policy  by  \nwhere  stands for the discounted return associated with following  from the initialstate . Defining  as the maximum possible state-value of , where  isallowed to change,  \nA policy that achieves these optimal state-values in each state is called *optimal*. Clearly, a policy that is optimal inthis sense is also optimal in the sense that it maximizes the expected discounted return, since , where  is a state randomly sampled from the distribution  of initial states (so ).  \nAlthough state-valuessuffice to define optimality, it is useful to define action-values. Given a state , an action  and a policy , the action-value of the pair  under  is defined by  \nwhere  now stands for the randomdiscounted return associated with first taking action  in state  and following , thereafter.  \nThe theory of Markov decision processes states that if  is an optimal policy, we act optimally (take the optimalaction) by choosing the action from  with the highest action-value at each state, . The *action-value function* of such an optimal policy () is called the *optimal action-value function* and iscommonly denoted by . In summary, the knowledge of the optimal action-value function alone suffices to know how to act optimally.  \nAssuming full knowledge of the Markov decision process, the two basicapproaches to compute the optimal action-value function are [value iteration](https://en.wikipedia.org/wiki/Value_iteration) and [policy iteration](https://en.wikipedia.org/wiki/Policy_iteration). Bothalgorithms compute a sequence of functions  () that converge to . Computing these functions involves computing expectations over the whole state-space, which is impractical for all but the smallest (finite)Markov decision processes. In reinforcement learning methods, expectations are approximated by averaging over samples and using function approximation techniques to cope with the need to represent valuefunctions over large state-action spaces.  \n### Monte Carlo methods\n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=9)]  \n[Monte Carlo methods](https://en.wikipedia.org/wiki/Monte_Carlo_sampling)[[15]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-15) are usedto solve reinforcement learning problems by averaging sample returns. Unlike methods that require full knowledge of the environment\'s dynamics, Monte Carlo methods rely solely on actual or [simulated(https://en.wikipedia.org/wiki/Simulation) experienceâ€”sequences of states, actions, and rewards obtained from interaction with an environment. This makes them applicable in situations where the completedynamics are unknown. Learning from actual experience does not require prior knowledge of the environment and can still lead to optimal behavior. When using simulated experience, only a model capable of generatingsample transitions is required, rather than a full specification of [transition probabilities](https://en.wikipedia.org/wiki/Markov_chain), which is necessary for [dynamic programming](https://en.wikipediaorg/wiki/Dynamic_programming) methods.  \nMonte Carlo methods apply to episodic tasks, where experience is divided into episodes that eventually terminate. Policy and value function updates occur only after thecompletion of an episode, making these methods incremental on an episode-by-episode basis, though not on a step-by-step (online) basis. The term "Monte Carlo" generally refers to any method involving [randomsampling](https://en.wikipedia.org/wiki/Random_sampling); however,in this context, it specifically refers to methods that compute averages from *complete* returns, rather than *partial* returns.  \nThesemethods function similarly to the [bandit algorithms](https://en.wikipedia.org/wiki/Multi-armed_bandit), in which returns are averaged for each state-action pair. The key difference isthat actions taken in one state affect the returns of subsequent states within the same episode, making the problem [non-stationary](https://en.wikipedia.org/wiki/Non-stationary). To address thisnon-stationarity, Monte Carlo methods use the framework of general policy iteration (GPI). While dynamic programming computes [value functions](https://en.wikipedia.org/wiki/Value_function) using full knowledge of the[Markov decision process](https://en.wikipedia.org/wiki/Markov_decision_process) (MDP), Monte Carlo methods learn these functions through sample returns. Thevalue functions and policies interact similarly to dynamic programming to achieve [optimality](https://en.wikipedia.org/wiki/Mathematical_optimization), first addressing the prediction problem and thenextending to policy improvement and control, all based on sampled experience.[[14]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-:0-14)  \n### Temporal difference methods  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=10)]  \nMain article: [Temporal differencelearning](https://en.wikipedia.org/wiki/Temporal_difference_learning) \nThe first problem is corrected by allowing the procedure to change the policy (at some or all states) before the values settle. This too maybe problematic as it might prevent convergence. Most current algorithms do this, giving rise to the class of *generalized policy iteration* algorithms. Many [*actor-critic*](https://en.wikipedia.org/wikiActor-critic_algorithm)[ methods](https://en.wikipedia.org/wiki/Actor-critic_algorithm) belong to this category.  \nThe second issue can be corrected by allowingtrajectories to contribute to any state-action pair in them. This may also help to some extent with the third problem, although a better solution when returns have high variance is Sutton\'s [temporal difference(https://en.wikipedia.org/wiki/Temporal_difference) (TD) methods that are based on the recursive [Bellman equation](https://en.wikipedia.org/wiki/Bellman_equation).[[16]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-16)[[17](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-FOOTNOTESuttonBarto2018[httpincompleteideasnetsuttonbookebooknode60html_%C2%A76._Temporal-Difference_Learning]-17) The computation in TD methods can beincremental (when after each transition the memory is changed andthe transition is thrown away), or batch (when the transitions are batched and the estimates are computed once based on the batch). Batchmethods, such as the least-squares temporal difference method,[[18]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-18) may use the information in the samples better, whileincremental methods are the only choice when batch methods are infeasible due to their high computational or memory complexity. Some methods try to combine the two approaches. Methods based on temporal differencesalso overcome the fourth issue.  \nAnother problem specific to TD comes from their reliance on the recursive Bellman equation. Most TD methods have a so-called  parameter  that can continuously interpolatebetween Monte Carlo methods that do not rely on the Bellman equationsand the basic TD methods that rely entirely on the Bellman equations. This can be effective in palliating this issue.  \n### Functionapproximation methods  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=11)]  \nIn order to address the fifth issue,*function approximation methods* are used. *Linear function approximation* starts with a mapping  that assigns a finite-dimensional vector to each state-action pair. Then, the action values of astate-action pair  are obtained by linearly combining the components of  with some *weights*:  \nThe algorithms then adjust the weights, instead of adjusting the values associated with the individual state-actionpairs. Methods based on ideas from [nonparametric statistics](https://en.wikipedia.org/wiki/Nonparametric_statistics) (which can be seen to construct their own features) have been explored. \nValue iteration can also be used as a starting point, giving rise to the [Q-learning](https://en.wikipedia.org/wiki/Q-learning) algorithm and its many variants.[[19]](https://en.wikipedia.org/wikiReinforcement_learning#cite_note-19) Including Deep Q-learning methods when a neural network is used to represent Q, with various applications in stochastic search problems.[[20]](https://en.wikipedia.org/wikiReinforcement_learning#cite_note-MBK-20)  \nThe problem with using action-values is that they may need highly precise estimates of the competing action values that can be hard to obtain when the returns arenoisy, though this problem is mitigated to some extent by temporal difference methods. Using the so-called compatible function approximation method compromises generality and efficiency.  \n### Direct policysearch  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=12)]  \nAn alternative method is to searchdirectly in (some subset of) the policy space, in which case the problem becomes a case of [stochastic optimization](https://en.wikipedia.org/wiki/Stochastic_optimization). The two approaches available aregradient-based and gradient-free methods.  \n[Gradient](https://en.wikipedia.org/wiki/Gradient)-based methods (*policy gradient methods*) start with a mapping from a finite-dimensional(parameter) space to the space of policies: given the parameter vector , let  denote the policy associated to . Defining the performance function by  under mild conditions this function will bedifferentiable as a function of the parameter vector . If the gradient of  was known, one could use [gradient ascent](https://en.wikipedia.org/wiki/Gradient_descent). Since an analytic expression for the gradient is notavailable, only a noisy estimate is available. Such an estimate can be constructed in many ways, giving rise to algorithms such as Williams\'s REINFORCE method[[21]](https://en.wikipedia.org/wikiReinforcement_learning#cite_note-21) (which is known as the likelihood ratio method in the [simulation-based optimization](https://en.wikipedia.org/wiki/Simulation-based_optimization) literature).[[22]](https://enwikipedia.org/wiki/Reinforcement_learning#cite_note-22)  \nA large classof methods avoids relying on gradient information. These include [simulated annealing](https://en.wikipedia.org/wiki/Simulated_annealing),[cross-entropy search](https://en.wikipedia.org/wiki/Cross-entropy_method) or methods of [evolutionary computation](https://en.wikipedia.org/wikiEvolutionary_computation). Many gradient-free methods can achieve (in theory and in the limit) a global optimum.  \nPolicy search methods may converge slowly given noisy data. For example, this happens in episodicproblems when the trajectories are long and the variance of the returns is large. Value-function based methods that rely on temporal differences might help in this case. In recent years, *actorâ€“critic methods* havebeen proposed and performed well on various problems.[[23]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-23)  \nPolicy search methods have been used in the [robotics(https://en.wikipedia.org/wiki/Robotics) context.[[24]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-24) Many policy search methods may get stuck in local optima (asthey are based on [local search](https://en.wikipedia.org/wiki/Local_search_(optimization))).  \n### Model-based algorithms  \n[[edit](https://en.wikipedia.org/w/indexphp?title=Reinforcement_learning&action=edit&section=13)]  \nFinally, all of the above methods can be combined with algorithms that first learn a model of the [Markov decision process](https://enwikipedia.org/wiki/Markov_decision_process), the probability of each next state given an action taken from an existing state. For instance, the Dyna algorithm learns a model from experience, and uses that toprovide more modelled transitions for a value function, in addition tothe real transitions.[[25]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-25) Such methods can sometimes be extended to use ofnon-parametric models, such as when the transitions are simply stored and "replayed" to the learning algorithm.[[26]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-26)  \nModel-basedmethods can be more computationally intensive than model-free approaches, and their utility can be limited by the extent to which the Markov decision process can be learnt.[[27]](https://en.wikipedia.orgwiki/Reinforcement_learning#cite_note-27)  \nThere are other ways to use models than to update a value function.[[28]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-28) For instance, in [modelpredictive control](https://en.wikipedia.org/wiki/Model_predictive_control) the model is used to update the behavior directly.  \n## Theory  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=14)]  \nBoth the asymptotic and finite-samplebehaviors of most algorithms are well understood. Algorithms with provably good online performance (addressing the exploration issue) are known.  \nEfficient exploration of Markov decision processes is givenin Burnetas and Katehakis (1997).[[12]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-Optimal_adaptive_policies_for_Marko-12) Finite-time performancebounds have also appeared for many algorithms, but these bounds are expected to be rather loose and thus more work is needed to better understand the relative advantages and limitations.  \nFor incrementalalgorithms, asymptotic convergence issues have been settled.[[*clarification needed*](https://en.wikipedia.org/wiki/Wikipedia:Please_clarify)] Temporal-difference-based algorithms converge undera wider set of conditions than was previously possible (for example, when used with arbitrary, smooth function approximation).  \n## Research  \n[[edit](https://en.wikipedia.org/w/index.phptitle=Reinforcement_learning&action=edit&section=15)]  \nThis section **needs additional citations for **[**verification**](https://en.wikipedia.org/wiki/Wikipedia:Verifiability). Please help [improve this article(https://en.wikipedia.org/wiki/Special:EditPage/Reinforcement_learning) by [adding citations to reliable sources](https://en.wikipedia.org/wiki/Help:Referencing_for_beginners) in this section. Unsourced material maybe challenged and removed. *(October 2022)**(*[*Learn how and when to remove this message*](https://en.wikipedia.org/wiki/Help:Maintenance_template_removal)*)*  \nResearch topics include:  \n- actor-critic architecture[[29]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-29)  \n- actor-critic-scenery architecture[[3]](https://enwikipedia.org/wiki/Reinforcement_learning#cite_note-Li-2023-3)  \n- adaptive methods that work with fewer (or no) parameters under a large number of conditions  \n- bug detection in software projects[[30](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-30)  \n-continuous learning  \n- combinations with logic-based frameworks[[31]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-31)  \n-exploration in large Markov decision processes  \n- entity-based reinforcement learning[[32]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-32)[[33]](https://en.wikipedia.org/wikiReinforcement_learning#cite_note-33)[[34]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-34)  \n- [human feedback](https://en.wikipedia.org/wiki/Reinforcement_learning_from_human_feedback)[[35]](https://en.wikipediaorg/wiki/Reinforcement_learning#cite_note-35)  \n- interaction between implicit and explicit learning in skill acquisition  \n- [intrinsic motivation](https://en.wikipedia.org/wiki/Intrinsic_motivation(artificial_intelligence)) which differentiates information-seeking, curiosity-type behaviours from task-dependent goal-directed behaviours large-scale empirical evaluations  \n- large (or continuous) actionspaces  \n- modular and hierarchical reinforcement learning[[36]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-36)  \n- multiagent/distributed reinforcement learning is a topicof interest. Applications are expanding.[[37]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-37)  \n- occupant-centric control  \n- optimization ofcomputing resources[[38]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-38)[[39]](https://en.wikipedia.org/wikiReinforcement_learning#cite_note-39)[[40]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-40)  \n- [partial information](https://en.wikipedia.org/wiki/Partially_observable_Markov_decision_process) (e.g., using[predictive state representation](https://en.wikipedia.org/wiki/Predictive_state_representation))  \n- reward function based on maximising novel information[[41]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-kaplan2004-41)[[42]](https://en.wikipedia.org/wikiReinforcement_learning#cite_note-klyubin2008-42)[[43]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-barto2013-43)  \n- sample-based planning (e.g., based on [Monte Carlo tree search](https://enwikipedia.org/wiki/Monte_Carlo_tree_search)).  \n- securities trading[[44]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-44)  \n- [transfer learning](https://en.wikipedia.org/wiki/Transfer_learning)[[45]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-45)  \n- TDlearning modeling [dopamine](https://en.wikipedia.org/wiki/Dopamine)-based learning in the brain. [Dopaminergic](https://en.wikipedia.org/wiki/Dopaminergic)projections from the [substantia nigra](https://en.wikipedia.org/wiki/Substantia_nigra) to the [basal ganglia](https://en.wikipedia.org/wiki/Basal_ganglia) function are theprediction error.  \n- value-function and policy search methods  \n##Comparison of key algorithms  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=16)]  \nThefollowing table lists the key algorithms for learning a policy depending on several criteria:  \n- The algorithm can be on-policy (it performs policy updates using trajectories sampled via the current policy)[[46]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-46) or off-policy.  \n- The action space may be discrete (e.g. theaction space could be "going up", "going left", "going right", "going down", "stay") or continuous (e.g. moving the arm with a given angle).  \n- The state space may be discrete (e.g. the agent could be ina cell in a grid) or continuous (e.g. the agent could be located at a given position in the plane).  \n### Associative reinforcement learning  \n[[edit](https://en.wikipedia.org/w/index.phptitle=Reinforcement_learning&action=edit&section=17)]  \nAssociative reinforcement learning tasks combine facets of stochastic learning automata tasks and supervised learning pattern classification tasks. In associativereinforcement learning tasks, the learning system interacts in a closed loop with its environment.[[50]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-50)  \n### Deep reinforcement learning  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=18)]  \nThis approach extends reinforcementlearning by using a deep neural network and without explicitly designing the state space.[[51]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-intro_deep_RL-51) The work on learning ATARIgames by Google [DeepMind](https://en.wikipedia.org/wiki/DeepMind) increased attention to [deep reinforcement learning](https://en.wikipedia.org/wiki/Deep_reinforcement_learning) or [end-to-end reinforcement learning](https://en.wikipedia.org/wiki/End-to-end_reinforcement_learning).[[52]](https://en.wikipedia.org/wikiReinforcement_learning#cite_note-DQN2-52)  \n### Adversarial deep reinforcement learning  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=19)]  \nAdversarial deep reinforcement learningis an active area of research in reinforcement learning focusing on vulnerabilities of learned policies. In this research area some studies initially showed that reinforcement learning policies aresusceptible to imperceptible adversarial manipulations.[[53]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-53)[[54]](https://en.wikipedia.org/wikiReinforcement_learning#cite_note-54)[[55]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-55) While some methods have been proposed to overcome these susceptibilities, in the most recent studies it has been shownthat these proposed solutions are far from providing an accurate representation of current vulnerabilities of deep reinforcement learning policies.[[56]](https://en.wikipedia.org/wikiReinforcement_learning#cite_note-56)  \n### Fuzzy reinforcement learning  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=20)]  \nBy introducing [fuzzy inference(https://en.wikipedia.org/wiki/Fuzzy_control_system) in reinforcement learning,[[57]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-57) approximating the state-action value function with [fuzzyrules](https://en.wikipedia.org/wiki/Fuzzy_rule) in continuous spacebecomes possible. The IF - THEN form of fuzzy rules make this approach suitable for expressing the results in a form close to natural language.Extending FRL with Fuzzy Rule Interpolation[[58]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-58) allows the use of reduced size sparse fuzzy rule-basesto emphasize cardinal rules (most important state-action values).  \n### Inverse reinforcement learning  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=21)] \nIn inverse reinforcement learning (IRL), no reward function is given. Instead, the reward function is inferred given an observed behavior from an expert. The idea is to mimic observed behavior, which isoften optimal or close to optimal.[[59]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-59) One popular IRL paradigm is named maximum entropy inversereinforcement learning (MaxEnt IRL).[[60]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-60) MaxEnt IRL estimates the parameters of a linear model of thereward function by maximizing the entropy of the probability distribution of observed trajectories subject to constraints related to matching expected feature counts. Recently it has been shown thatMaxEnt IRL is a particular case of a more general framework named random utility inverse reinforcement learning (RU-IRL).[[61]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-61) RU-IRL isbased on [random utility theory](https://en.wikipedia.org/wiki/Random_utility_model) and Markov decision processes. While prior IRL approaches assume that the apparentrandom behavior of an observed agent is due to it following a random policy, RU-IRL assumes that the observed agent follows a deterministic policy but randomness in observed behavior is due to the factthat an observer only has partial access to the features the observedagent uses in decision making. The utility function is modeled as a random variable to account for the ignorance of the observer regarding thefeatures the observed agent actually considers in its utility function.  \n### Multi-objective reinforcement learning  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learningaction=edit&section=22)]  \nMulti-objective reinforcement learning (MORL) isa form of reinforcement learning concerned with conflicting alternatives. It is distinct from multi-objective optimization in that it isconcerned with agents acting in environments.[[62]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-62)[[63]](https://en.wikipedia.org/wikiReinforcement_learning#cite_note-63)  \n### Safe reinforcement learning  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=23)]  \nSafe reinforcement learning (SRL) canbe defined as the process of learning policies that maximize the expectation of the return in problems in which it is important to ensure reasonable system performance and/or respect safety constraints duringthe learning and/or deployment processes.[[64]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-64) An alternative approach is risk-averse reinforcementlearning, where instead of the *expected* return, a *risk-measure* of the return is optimized, such as the [conditional value at risk](https://en.wikipedia.org/wiki/Expected_shortfall) (CVaR).[[65]](https://enwikipedia.org/wiki/Reinforcement_learning#cite_note-65) In addition to mitigating risk, the CVaR objective increases robustness to model uncertainties.[[66]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-66)[[67]](https://en.wikipedia.org/wikiReinforcement_learning#cite_note-67) However, CVaR optimization in risk-averse RL requires special care, to prevent gradient bias[[68]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-68) and blindness to success.[[69]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-69)  \n### Self-reinforcement learning  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=24)]  \nSelf-reinforcement learning (orself-learning), is a learning paradigm which does not use the concept of immediate reward  after transition from  to  with action . It does not use an external reinforcement, it only uses the agent internalself-reinforcement. The internal self-reinforcement is provided by mechanism of feelings and emotions. In the learning process emotions are backpropagated by a mechanism of secondary reinforcement. The learningequation does not include the immediate reward, it only includes the state evaluation.  \nThe self-reinforcement algorithm updates a memory matrix  such that in each iteration executes the following machinelearning routine:  \n1. In situation  perform action .  \n1. Receive a consequence situation .  \n1. Compute state evaluation  of how good is to be in the consequence situation .  \n1. Update crossbarmemory .  \nInitial conditions of the memory are received as input from the genetic environment. It is a system with only one input (situation), and only one output (action, or behavior).  \nSelf-reinforcement(self-learning) was introduced in 1982 along with a neural networkcapable of self-reinforcement learning, named Crossbar Adaptive Array (CAA).[[70]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-70)[[71]](https://en.wikipedia.org/wikiReinforcement_learning#cite_note-71) The CAA computes, in a crossbar fashion, both decisions about actions and emotions (feelings) about consequence states. The system is driven by the interaction between cognition and emotion.[[72](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-72)  \n### Reinforcement Learning in Natural Language Processing  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learningaction=edit&section=25)]  \nIn recent years, Reinforcement learning has become a significant concept in [Natural Language Processing (NLP)](https://en.wikipedia.org/wiki/Natural_language_processing), where tasks areoften sequential decision-making rather than static classification. Reinforcement learning is where an agent take actions in an environment to maximize the accumulation of rewards. This frameworkis best fit for many NLP tasks, including dialogue generation, text summarization, and machine translation, where the quality of the output depends on optimizing long-term or human-centered goals ratherthan the prediction of single correct label.  \nEarly application of RL in NLP emerged in dialogue systems, where conversation was determined as a series of actions optimized for fluency and coherence. Theseearly attempts, including policy gradient and sequence-level training techniques, laid a foundation for the broader application of reinforcement learning to other areas of NLP.  \nA major breakthrough happenedwith the introduction of [Reinforcement Learning from Human Feedback (RLHF)](https://en.wikipedia.org/wiki/Reinforcement_learning_from_human_feedback), a method in which human feedbacks are used to train a rewardmodel that guides the RL agent. Unlike traditional rule-based or supervised systems, RLHF allows models to align their behavior with human judgments on complex and subjective tasks. This technique wasinitially used in the development of [InstructGPT](https://en.wikipedia.org/wiki/InstructGPT), an effective language model trained to follow human instructions and later in[ChatGPT](https://en.wikipedia.org/wiki/ChatGPT) which incorporates RLHF for improving output responses and ensuring safety.  \nMore recently, researchers have explored the use of offline RL in NLP to improvedialogue systems without the need of live human interaction. These methods optimize for user engagement, coherence, and diversity based on past conversation logs and pre-trained reward models.  \n## Statisticalcomparison of reinforcement learning algorithms  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=26)]  \nEfficient comparison of RL algorithmsis essential for research, deployment and monitoring of RL systems.To compare different algorithms on a given environment, an agent can be trained for each algorithm. Since the performance is sensitive toimplementation details, all algorithms should be implemented as closelyas possible to each other.[[73]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-73) After the training is finished, the agentscan be run on a sample of test episodes, and their scores (returns) can be compared. Since episodes are typically assumed to be [i.i.d](https://en.wikipedia.org/wiki/I.i.d), standard statistical toolscan be used for hypothesis testing, such as [T-test](https://en.wikipedia.org/wiki/Student%27s_t-test) and [permutation test](https://en.wikipedia.org/wiki/Permutation_test).[[74](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-74) This requires to accumulate all the rewards within an episode into a single numberâ€”the episodic return. However, this causes a loss of information,as different time-steps are averaged together, possibly with different levels of noise. Whenever the noise level varies across the episode, the statistical power can be improved significantly, byweighting the rewards according to their estimated noise.[[75]](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_note-75)  \n## Challenges and Limitations  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=27)]  \nDespite significant advancements,reinforcement learning (RL) continues to face several challenges and limitations that hinder its widespread application in real-world scenarios.  \n### Sample Inefficiency  \n[[edit](https://en.wikipedia.org/windex.php?title=Reinforcement_learning&action=edit&section=28)]  \nRL algorithms often require a large number of interactions with the environment to learn effective policies, leading to high computationalcosts and time-intensive to train the agent. For instance, [OpenAI\'s](https://en.wikipedia.org/wiki/OpenAI) Dota-playing bot utilized thousands of years of simulated gameplay to achieve human-levelperformance. Techniques like experience replay and [curriculum learning](https://en.wikipedia.org/wiki/Curriculum_learning) have been proposed to deprive sample inefficiency, but these techniques add morecomplexity and are not always sufficient for real-world applications.  \n### Stability and Convergence Issues  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=editsection=29)]  \nTraining RL models, particularly for [deep neural network-based models](https://en.wikipedia.org/wiki/Deep_learning), can be unstable and prone to divergence. A small change in the policy orenvironment can lead to extreme fluctuations in performance, making it difficult to achieve consistent results. This instability is further enhanced in the case of the continuous or high-dimensional actionspace, where the learning step becomes more complex and less predictable.  \n### Generalization and Transferability  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=editsection=30)]  \nThe RL agents trained in specific environments often struggle to generalize their learned policies to new, unseen scenarios. This is the major setback preventing the application of RL todynamic real-world environments where adaptability is crucial. The challenge is to develop such algorithms that can transfer knowledge across tasks and environments without extensive retraining.  \n### Bias andReward Function Issues  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=31)]  \nDesigning appropriate reward functionsis critical in RL because poorly designed reward functions can lead to unintended behaviors. In addition, RL systems trained on biased data may perpetuate existing biases and lead to discriminatory orunfair outcomes. Both of these issues requires careful consideration ofreward structures and data sources to ensure fairness and desired behaviors.  \n## See also  \n[[edit](https://en.wikipedia.org/w/index.phptitle=Reinforcement_learning&action=edit&section=32)]  \n- [Active learning (machine learning)](https://en.wikipedia.org/wiki/Active_learning_(machine_learning))  \n- [Apprenticeship learning](https://enwikipedia.org/wiki/Apprenticeship_learning)  \n- [Error-driven learning](https://en.wikipedia.org/wiki/Error-driven_learning)  \n- [Model-free (reinforcement learning)](https://en.wikipedia.org/wikiModel-free_(reinforcement_learning))  \n- [Multi-agent reinforcement learning](https://en.wikipedia.org/wiki/Multi-agent_reinforcement_learning)  \n- [Optimal control](https://en.wikipedia.org/wikiOptimal_control)  \n- [Q-learning](https://en.wikipedia.org/wiki/Q-learning)  \n- [Reinforcement learning from human feedback](https://en.wikipedia.org/wiki/Reinforcement_learning_from_human_feedback)  \n- [Stateâ€“actionâ€“rewardâ€“stateâ€“action](https://en.wikipedia.org/wiki/State%E2%80%93action%E2%80%93reward%E2%80%93state%E2%80%93action) (SARSA)  \n-[Temporal difference learning](https://en.wikipedia.org/wiki/Temporal_difference_learning)  \n## References  \n[[edit](https://en.wikipedia.org/w/index.phptitle=Reinforcement_learning&action=edit&section=33)]  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-kaelbling_1-0)[Kaelbling, Leslie P.](https://en.wikipedia.org/wikiLeslie_P._Kaelbling); [Littman, Michael L.](https://en.wikipedia.org/wiki/Michael_L._Littman); [Moore, Andrew W.](https://en.wikipedia.org/w/index.php?title=Andrew_W._Mooreaction=edit&redlink=1) (1996). ["Reinforcement Learning: A Survey"](http://webarchive.loc.gov/all/20011120234539/http://www.cs.washington.edu/research/jair/abstracts/kaelbling96a.html). *Journal ofArtificial Intelligence Research*. **4**: 237â€“285. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[cs/9605103](https://arxiv.org/abs/cs/9605103). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1613/jair.301](https://doi.org/10.1613%2Fjair.301). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[1708582](https://api.semanticscholar.org/CorpusID:1708582). Archived from [the original](http://www.cs.washington.edu/research/jair/abstracts/kaelbling96a.html) on 2001-11-20.  \n1. [**^**](https://en.wikipedia.org/wikiReinforcement_learning#cite_ref-2) van Otterlo, M.; Wiering, M. (2012). "Reinforcement Learning and Markov Decision Processes". *Reinforcement Learning*. Adaptation, Learning, and Optimization. Vol.\xa012.pp.\xa03â€“42. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/978-3-642-27645-3_1](https://doi.org/10.1007%2F978-3-642-27645-3_1). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-3-642-27644-6](https://en.wikipedia.org/wiki/Special:BookSources978-3-642-27644-6).  \n1. ^ [Jump up to: ](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-Li-2023_3-0)[***a***](https://en.wikipedia.org/wikiReinforcement_learning#cite_ref-Li-2023_3-0)[***b***](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-Li-2023_3-1) Li, Shengbo (2023). [*Reinforcement Learning for Sequential Decision and Optimal Control*](https://linkspringer.com/book/10.1007/978-981-19-7784-8) (First\xa0ed.). SpringerVerlag, Singapore. pp.\xa01â€“460. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/978-981-19-7784-8](https://doi.org/101007%2F978-981-19-7784-8). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-9-811-97783-1](https://en.wikipedia.org/wiki/Special:BookSources978-9-811-97783-1). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[257928563](https://api.semanticscholar.org/CorpusID:257928563).`{{[cite book](https:/en.wikipedia.org/wiki/Template:Cite_book)}}`: CS1 maint: locationmissing publisher ([link](https://en.wikipedia.org/wiki/Category:CS1_maint:_location_missing_publisher))  \n1. [**^**](https://en.wikipedia.orgwiki/Reinforcement_learning#cite_ref-4) Russell, Stuart J.; Norvig, Peter (2010). *Artificial intelligence\xa0: a modern approach* (Third\xa0ed.). Upper Saddle River, New Jersey: [Prentice Hall](https:/en.wikipedia.org/wiki/Prentice_Hall). pp.\xa0830, 831. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-0-13-604259-4](https://en.wikipedia.org/wiki/Special:BookSources978-0-13-604259-4).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-5) Lee, Daeyeol; Seo, Hyojung; Jung, Min Whan (21 July 2012). ["NeuralBasis of Reinforcement Learning and Decision Making"](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3490621). *Annual Review of Neuroscience*. **35** (1): 287â€“308. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1146/annurev-neuro-062111-150512](https://doi.org/101146%2Fannurev-neuro-062111-150512). [PMC](https://en.wikipedia.org/wiki/PMC_(identifier))[3490621](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3490621). [PMID](https://en.wikipedia.org/wiki/PMID_(identifier))[22462543](https://pubmed.ncbi.nlm.nih.gov/22462543).  \n1. [**^**](https://en.wikipediaorg/wiki/Reinforcement_learning#cite_ref-6) Salazar Duque, Edgar Mauricio; Giraldo, Juan S.; Vergara, Pedro P.; Nguyen, Phuong; Van Der Molen, Anne; Slootweg, Han (2022). ["Community energy storage operationvia reinforcement learning with eligibility traces"](https://doi.org/10.1016%2Fj.epsr.2022.108515). *Electric Power Systems Research*. **212**. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier)):[2022EPSR..21208515S](https://ui.adsabs.harvard.edu/abs/2022EPSR..21208515S). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1016/j.epsr.2022.108515](https://doi.org/10.1016%2Fj.epsr.2022.108515). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[250635151](https://api.semanticscholar.org/CorpusID:250635151).  \n1. [**^**](https:/en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-7) Xie, Zhaoming; Hung Yu Ling; Nam Hee Kim; Michiel van de Panne (2020). "ALLSTEPS: Curriculum-driven Learning of Stepping Stone Skills". [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2005.04323](https://arxiv.org/abs/2005.04323) [[cs.GR](https://arxiv.org/archive/csGR)].  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-8) Vergara, Pedro P.; Salazar, Mauricio; Giraldo, Juan S.; Palensky,Peter (2022). ["Optimal dispatch of PV inverters in unbalanced distribution systems using Reinforcement Learning"](https://doi.org/10.1016%2Fj.ijepes.2021.107628). *International Journal of ElectricalPower & Energy Systems*. **136**. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier)):[2022IJEPE.13607628V](https://ui.adsabs.harvard.edu/abs/2022IJEPE.13607628V). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1016/j.ijepes.2021.107628](https://doi.org/10.1016%2Fj.ijepes.2021.107628). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[244099841](https://api.semanticscholar.org/CorpusID:244099841).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-FOOTNOTESuttonBarto2018Chapter_11_9-0)[Sutton & Barto 2018](https://enwikipedia.org/wiki/Reinforcement_learning#CITEREFSuttonBarto2018), Chapter 11.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-Ren-2022_10-0) Ren, Yangang; Jiang, Jianhua; Zhan,Guojian; Li, Shengbo Eben; Chen, Chen; Li, Keqiang; Duan, Jingliang (2022). ["Self-Learned Intelligence for Integrated Decision and Control of Automated Vehicles at Signalized Intersections"](https://ieeexploreieee.org/document/9857655). *IEEE Transactions on Intelligent Transportation Systems*. **23** (12): 24145â€“24156. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2110.12359](https://arxiv.org/abs2110.12359). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1109/TITS.2022.3196167](https://doi.org/10.1109%2FTITS.2022.3196167).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-11)[Gosavi, Abhijit](https://en.wikipedia.org/w/index.phptitle=Abhijit_Gosavi&action=edit&redlink=1) (2003). [*Simulation-based Optimization: Parametric Optimization Techniques and Reinforcement*](https://www.springer.com/mathematics/applications/book/978-1-4020-7454-7).Operations Research/Computer Science Interfaces Series. Springer.[ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-1-4020-7454-7](https://en.wikipedia.org/wiki/Special:BookSources978-1-4020-7454-7).  \n1. ^ [Jump up to: ](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-Optimal_adaptive_policies_for_Marko_12-0)[***a***](https://en.wikipedia.orgwiki/Reinforcement_learning#cite_ref-Optimal_adaptive_policies_for_Marko_12-0)[***b***](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-Optimal_adaptive_policies_for_Marko_12-1) Burnetas, ApostolosN.; [Katehakis, Michael N.](https://en.wikipedia.org/wiki/Michael_N._Katehakis) (1997), "Optimal adaptive policies for Markov Decision Processes", [*Mathematics ofOperations Research*](https://en.wikipedia.org/wiki/Mathematics_of_Operations_Research), **22** (1): 222â€“255, [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1287/moor.22.1.222](https://doi.org/10.1287%2Fmoor.22.1.222), [JSTOR](https://en.wikipedia.org/wiki/JSTOR_(identifier))[3690147](https://www.jstor.org/stable/3690147)  \n1. [**^**](https://en.wikipedia.orgwiki/Reinforcement_learning#cite_ref-13) Tokic, Michel; Palm, GÃ¼nther (2011), ["Value-Difference Based Exploration: Adaptive Control Between Epsilon-Greedy and Softmax"](http://www.tokic.com/www/tokicmpublikationen/papers/KI2011.pdf) (PDF), *KI 2011: Advances in Artificial Intelligence*, Lecture Notes in Computer Science, vol.\xa07006, Springer, pp.\xa0335â€“346, [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-3-642-24455-1](https://en.wikipedia.org/wiki/Special:BookSources978-3-642-24455-1)  \n1. ^ [Jump up to: ](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-:0_14-0)[***a***](https://en.wikipedia.org/wikiReinforcement_learning#cite_ref-:0_14-0)[***b***](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-:0_14-1)[***c***](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-:0_14-2)["Reinforcement learning: An introduction"](https://web.archive.org/web/20170712170739/http://people.inf.elte.hu/lorincz/Files/RL_2006/SuttonBook.pdf) (PDF). Archived from[the original](http://people.inf.elte.hu/lorincz/Files/RL_2006/SuttonBook.pdf) (PDF) on 2017-07-12. Retrieved 2017-07-23.  \n1. [**^**](https://enwikipedia.org/wiki/Reinforcement_learning#cite_ref-15) Singh, Satinder P.; Sutton, Richard S. (1996-03-01). ["Reinforcement learning with replacing eligibility traces"](https://link.springer.com/article/101007/BF00114726). *Machine Learning*. **22** (1): 123â€“158. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/BF00114726](https://doi.org/10.1007%2FBF00114726). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier))[1573-0565](https://search.worldcat.org/issn/1573-0565).  \n1. [**^**](https://enwikipedia.org/wiki/Reinforcement_learning#cite_ref-16)[Sutton, Richard S.](https://en.wikipedia.org/wiki/Richard_S._Sutton) (1984). [*Temporal Credit Assignment in Reinforcement Learning*](https://web.archive.org/web/20170330002227/http://incompleteideas.net/sutton/publications.html#PhDthesis) (PhD thesis). Universityof Massachusetts, Amherst, MA. Archived from [the original](http://incompleteideas.net/sutton/publications.html#PhDthesis) on 2017-03-30. Retrieved 2017-03-29.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-FOOTNOTESuttonBarto201[httpincompleteideasnetsuttonbookebooknode60html_%C2%A76._Temporal-Difference_Learning]_17-0)[Sutton & Barto 2018](https://en.wikipedia.org/wiki/Reinforcement_learning#CITEREFSuttonBarto2018), [Â§6. Temporal-Difference Learning](http://incompleteideasnet/sutton/book/ebook/node60.html).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-18)[Bradtke, Steven J.](https://en.wikipedia.org/w/index.phptitle=Steven_J._Bradtke&action=edit&redlink=1); [Barto, Andrew G.](https://en.wikipedia.org/wiki/Andrew_G._Barto) (1996). "Learning to predict by the method of temporal differences". *Machine Learning*.**22**: 33â€“57. [CiteSeerX](https://en.wikipedia.org/wiki/CiteSeerX_(identifier))[10.1.1.143.857](https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.143857). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1023/A:1018056104778](https://doi.org/10.1023%2FA%3A1018056104778). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[20327856](https://api.semanticscholar.org/CorpusID:20327856).  \n1. [**^**](https:/en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-19)[Watkins, Christopher J.C.H.](https://en.wikipedia.org/w/index.php?title=Christopher_J.C.H._Watkins&action=edit&redlink=1) (1989). [*Learning fromDelayed Rewards*](http://www.cs.rhul.ac.uk/~chrisw/new_thesis.pdf) (PDF)(PhD thesis). King\'s College, Cambridge, UK.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-MBK_20-0) Matzliach,Barouch; Ben-Gal, Irad; Kagan, Evgeny (2022). ["Detection of Static and Mobile Targets by an Autonomous Agent with Deep Q-Learning Abilities"](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9407070).*Entropy*. **24** (8): 1168. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier)):[2022Entrp..24.1168M](https://ui.adsabs.harvard.edu/abs/2022Entrp..24.1168M). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.3390/e24081168](https://doi.org/10.3390%2Fe24081168). [PMC](https://en.wikipedia.org/wiki/PMC_(identifier))[9407070](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9407070). [PMID](https://en.wikipedia.org/wiki/PMID_(identifier))[36010832](https://pubmed.ncbi.nlm.nih.gov/36010832).  \n1. [**^**](https://en.wikipediaorg/wiki/Reinforcement_learning#cite_ref-21)[Williams, Ronald J.](https://en.wikipedia.org/wiki/Ronald_J._Williams) (1987). "A class of gradient-estimating algorithms for reinforcement learning in neuralnetworks". *Proceedings of the IEEE First International Conference on Neural Networks*. [CiteSeerX](https://en.wikipedia.org/wiki/CiteSeerX_(identifier))[10.1.1.129.8871](https://citeseerx.ist.psu.edu/viewdocsummary?doi=10.1.1.129.8871).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-22)[Peters, Jan](https://en.wikipedia.org/wiki/Jan_Peters(computer_scientist)); [Vijayakumar, Sethu](https://en.wikipedia.org/wiki/Sethu_Vijayakumar); [Schaal, Stefan](https://en.wikipedia.org/wiki/Stefan_Schaal) (2003). [*ReinforcementLearning for Humanoid Robotics*](http://web.archive.org/web/20130512223911/http://www-clmc.usc.edu/publications/p/peters-ICHR2003.pdf) (PDF). IEEE-RAS InternationalConference on Humanoid Robots. Archived from [the original](http://www-clmc.usc.edu/publications/p/peters-ICHR2003.pdf) (PDF) on 2013-05-12.  \n1. [**^**](https://en.wikipedia.org/wikiReinforcement_learning#cite_ref-23) Juliani, Arthur (2016-12-17). ["SimpleReinforcement Learning with Tensorflow Part 8: Asynchronous Actor-Critic Agents (A3C)"](https://medium.com/emergent-futuresimple-reinforcement-learning-with-tensorflow-part-8-asynchronous-actor-critic-agents-a3c-c88f72a5e9f2). *Medium*. Retrieved 2018-02-22.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-24)[Deisenroth, Marc Peter](https://en.wikipedia.org/w/index.phptitle=Marc_Peter_Deisenroth&action=edit&redlink=1); Neumann, Gerhard; [Peters, Jan](https://en.wikipedia.org/wiki/Jan_Peters_(computer_scientist)) (2013). [*A Survey on Policy Search for Robotics*](http://eprintslincoln.ac.uk/28029/1/PolicySearchReview.pdf) (PDF). Foundations and Trends in Robotics. Vol.\xa02. NOW Publishers. pp.\xa01â€“142. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1561/2300000021(https://doi.org/10.1561%2F2300000021). [hdl](https://en.wikipedia.org/wiki/Hdl_(identifier)):[10044/1/12051](https://hdl.handle.net/10044%2F1%2F12051).  \n1. [**^**](https://enwikipedia.org/wiki/Reinforcement_learning#cite_ref-25) Sutton, Richard (1990). "Integrated Architectures for Learning, Planning and Reacting based on Dynamic Programming". *Machine Learning: Proceedings of theSeventh International Workshop*.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-26) Lin, Long-Ji (1992). ["Self-improving reactive agents based onreinforcement learning, planning and teaching"](https://link.springer.com/content/pdf/10.1007/BF00992699.pdf) (PDF). *Machine Learning*. Vol.\xa08. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/BF00992699](https://doi.org/10.1007%2FBF00992699).  \n1. [**^**](https://enwikipedia.org/wiki/Reinforcement_learning#cite_ref-27) Zou, Lan (2023-01-01), Zou, Lan (ed.), ["Chapter 7 - Meta-reinforcement learning"](https://www.sciencedirect.com/science/article/piiB9780323899314000110), *Meta-Learning*, Academic Press, pp.\xa0267â€“297, [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1016/b978-0-323-89931-4.00011-0](https://doi.org/10.1016%2Fb978-0-323-89931-400011-0), [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-0-323-89931-4](https://en.wikipedia.org/wiki/Special:BookSources978-0-323-89931-4), retrieved 2023-11-08  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-28) van Hasselt, Hado; Hessel, Matteo; Aslanides, John (2019). ["When touse parametric models in reinforcement learning?"](https://proceedings.neurips.cc/paper/2019/file/1b742ae215adf18b75449c6e272fd92d-Paper.pdf) (PDF). *Advances in Neural InformationProcessing Systems*. Vol.\xa032.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-29) Grondman, Ivo; Vaandrager, Maarten; Busoniu, Lucian; Babuska, Robert;Schuitema, Erik (2012-06-01). ["Efficient Model Learning Methods for Actorâ€“Critic Control"](https://dl.acm.org/doi/10.1109/TSMCB.2011.2170565). *IEEE Transactions on Systems, Man, and Cybernetics - Part B:Cybernetics*. **42** (3): 591â€“602. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1109/TSMCB.2011.2170565](https://doi.org/10.1109%2FTSMCB.2011.2170565). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier))[1083-4419](https://search.worldcat.org/issn/1083-4419). [PMID](https://en.wikipedia.org/wiki/PMID_(identifier))[22156998](https://pubmed.ncbi.nlm.nih.gov/22156998).  \n1. [**^**](https://en.wikipediaorg/wiki/Reinforcement_learning#cite_ref-30)["On the Use of Reinforcement Learning for Testing Game Mechanics\xa0: ACM - Computers in Entertainment"](https://cie.acm.org/articlesuse-reinforcements-learning-testing-game-mechanics/). *cie.acm.org*. Retrieved 2018-11-27.\n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-31) Riveret, Regis; Gao, Yang (2019). "A probabilistic argumentationframework for reinforcement learning agents". *Autonomous Agents and Multi-Agent Systems*. **33** (1â€“2): 216â€“274. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/s10458-019-09404-2](https://doiorg/10.1007%2Fs10458-019-09404-2). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[71147890](https://api.semanticscholar.org/CorpusID:71147890).  \n1. [**^**](https:/en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-32) Haramati,Dan; Daniel, Tal; Tamar, Aviv (2024). "Entity-Centric Reinforcement Learning for Object Manipulation from Pixels". [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2404.01220](https://arxiv.org/abs/2404.01220) [[cs.RO](https://arxiv.org/archive/csRO)].  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-33) Thompson, Isaac Symes; Caron, Alberto; Hicks, Chris; Mavroudis,Vasilios (2024-11-07). "Entity-based Reinforcement Learning for Autonomous Cyber Defence". *Proceedings of the Workshop on Autonomous Cybersecurity (AutonomousCyber \'24)*. ACM. pp.\xa056â€“67. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2410.17647](https://arxiv.org/abs/2410.17647). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1145/3689933.3690835](https://doi.org/10.1145%2F3689933.3690835).  \n1. [**^**(https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-34) Winter, Clemens (2023-04-14). ["Entity-Based Reinforcement Learning"](https://clemenswinter.com/2023/04/14entity-based-reinforcement-learning/). *Clemens Winter\'s Blog*.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-35) Yamagata, Taku; McConville, Ryan; Santos-Rodriguez, Raul(2021-11-16). "Reinforcement Learning with Feedback from Multiple Humans with Diverse Skills". [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2111.08596](https://arxiv.org/abs/2111.08596) [[cs.LG](https:/arxiv.org/archive/cs.LG)].  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-36) Kulkarni, Tejas D.; Narasimhan, Karthik R.; Saeedi, Ardavan;Tenenbaum, Joshua B. (2016). ["Hierarchical Deep Reinforcement Learning: Integrating Temporal Abstraction and Intrinsic Motivation"](http://dl.acm.org/citation.cfm?id=3157382.3157509). *Proceedings of the 30thInternational Conference on Neural Information Processing Systems*. NIPS\'16. USA: Curran Associates Inc.: 3682â€“3690. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1604.06057](https://arxiv.org/abs1604.06057). [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier)):[2016arXiv160406057K](https://ui.adsabs.harvard.edu/abs/2016arXiv160406057K). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-1-5108-3881-9](https://en.wikipedia.org/wiki/Special:BookSources978-1-5108-3881-9).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-37)["Reinforcement Learning / Successes of Reinforcement Learning"(http://umichrl.pbworks.com/Successes-of-Reinforcement-Learning/). *umichrl.pbworks.com*. Retrieved 2017-08-06.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-38) Dey, Somdip;Singh, Amit Kumar; Wang, Xiaohang; McDonald-Maier, Klaus (March 2020). ["User Interaction Aware Reinforcement Learning for Power and Thermal Efficiency of CPU-GPU Mobile MPSoCs"](https://ieeexplore.ieee.orgdocument/9116294). [*2020 Design, Automation & Test in Europe Conference & Exhibition (DATE)*](http://repository.essex.ac.uk/27546/1/User%20Interaction%20Aware%20Reinforcement%20Learning.pdf) (PDF). pp.\xa01728â€“1733. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.23919/DATE48585.2020.9116294](https://doi.org/10.23919%2FDATE48585.2020.9116294). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-3-9819263-4-7](https://en.wikipedia.org/wiki/Special:BookSources978-3-9819263-4-7). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[219858480](https://api.semanticscholar.org/CorpusID:219858480).  \n1. [**^**](https:/en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-39) Quested, Tony. ["Smartphones get smarter with Essex innovation"](https://www.businessweekly.co.uk/news/academia-researchsmartphones-get-smarter-essex-innovation). *Business Weekly*. Retrieved 2021-06-17.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-40) Williams, Rhiannon (2020-07-21). ["Future smartphones \'willprolong their own battery life by monitoring owners\' behaviour\'"](https://inews.co.uk/news/technology/future-smartphones-prolong-battery-life-monitoring-behaviour-558689). [*i*](https://enwikipedia.org/wiki/I_(British_newspaper)). Retrieved 2021-06-17.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-kaplan2004_41-0) Kaplan, F.; Oudeyer, P. (2004). "Maximizing LearningProgress: An Internal Reward System for Development". In Iida, F.; Pfeifer, R.; Steels, L.; Kuniyoshi, Y. (eds.). *Embodied Artificial Intelligence*. Lecture Notes in Computer Science. Vol.\xa03139. Berlin;Heidelberg: Springer. pp.\xa0259â€“270. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/978-3-540-27833-7_19](https://doi.org/10.1007%2F978-3-540-27833-7_19). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-3-540-22484-6](https://en.wikipedia.org/wiki/Special:BookSources978-3-540-22484-6). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[9781221](https://api.semanticscholar.org/CorpusID:9781221).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-klyubin2008_42-0) Klyubin, A.; Polani, D.; Nehaniv, C. (2008). ["Keepyour options open: an information-based driving principle for sensorimotor systems"](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2607028). *PLOS ONE*. **3** (12): e4018. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier)):[2008PLoSO...3.4018K](https://ui.adsabs.harvard.edu/abs/2008PLoSO...3.4018K). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1371/journal.pone.0004018](https://doi.org/10.1371%2Fjournal.pone.0004018). [PMC](https://en.wikipedia.org/wiki/PMC_(identifier))[2607028](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2607028). [PMID](https://en.wikipedia.org/wiki/PMID_(identifier))[19107219](https://pubmed.ncbi.nlm.nih.gov/19107219).  \n1. [**^**](https://en.wikipediaorg/wiki/Reinforcement_learning#cite_ref-barto2013_43-0) Barto, A. G. (2013). "Intrinsic motivation and reinforcement learning". [*Intrinsically Motivated Learning in Natural and Artificial Systems*](https:/people.cs.umass.edu/~barto/IMCleVer-chapter-totypeset2.pdf) (PDF). Berlin; Heidelberg: Springer. pp.\xa017â€“47.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-44) DabÃ©rius,Kevin; Granat, Elvin; Karlsson, Patrik (2020). "Deep Execution - Value and Policy Based Reinforcement Learning for Trading and Beating Market Benchmarks". *The Journal of Machine Learning in Finance*. **1**. [SSRN](https://en.wikipedia.org/wiki/SSRN_(identifier))[3374766](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3374766).  \n1. [**^**(https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-45) George Karimpanal, Thommen; Bouffanais, Roland (2019). "Self-organizing maps for storage and transfer of knowledge in reinforcement learning".*Adaptive Behavior*. **27** (2): 111â€“126. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1811.08318](https://arxiv.org/abs/1811.08318). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1177/1059712318818568](https://doi.org/10.1177%2F1059712318818568). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier))[1059-7123](https://search.worldcat.org/issn/1059-7123). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[53774629](https://api.semanticscholar.org/CorpusID:53774629).  \n1. [**^**](https:/en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-46) cf. [Sutton & Barto 2018](https://en.wikipedia.org/wiki/Reinforcement_learning#CITEREFSuttonBarto2018), Section 5.4, p. 100  \n1. [**^**](https:/en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-47) J Duan; YGuan; S Li (2021). ["Distributional Soft Actor-Critic: Off-policy reinforcement learning for addressing value estimation errors"](https:/ieeexplore.ieee.org/document/9448360). *IEEE Transactions on Neural Networks and Learning Systems*. **33** (11): 6584â€“6598. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2001.02811](https://arxivorg/abs/2001.02811). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1109/TNNLS.2021.3082568](https://doi.org/10.1109%2FTNNLS.2021.3082568). [PMID](https://en.wikipedia.org/wiki/PMID_(identifier))[34101599](https://pubmed.ncbi.nlm.nih.gov/34101599). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[211259373](https://api.semanticscholar.org/CorpusID:211259373).  \n1. [**^**](https:/en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-48) Y Ren; J Duan; S Li (2020). ["Improving Generalization of Reinforcement Learning with Minimax Distributional Soft Actor-Critic"](https://ieeexploreieee.org/document/9294300). *2020 IEEE 23rd International Conferenceon Intelligent Transportation Systems (ITSC)*. pp.\xa01â€“6. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2002.05502](https://arxivorg/abs/2002.05502). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1109/ITSC45102.2020.9294300](https://doi.org/10.1109%2FITSC45102.2020.9294300). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-1-7281-4149-7](https://en.wikipedia.org/wiki/Special:BookSources978-1-7281-4149-7). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[211096594](https://api.semanticscholar.org/CorpusID:211096594).  \n1. [**^**](https:/en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-49) Duan, J; Wang, W; Xiao, L (2025). "Distributional Soft Actor-Critic with Three Refinements". *IEEE Transactions on Pattern Analysis and MachineIntelligence*. **PP** (5): 3935â€“3946. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2310.05858](https://arxiv.org/abs/2310.05858). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1109/TPAMI.2025.3537087](https://doi.org/10.1109%2FTPAMI.2025.3537087). [PMID](https://en.wikipedia.org/wiki/PMID_(identifier))[40031258](https://pubmed.ncbi.nlm.nih.gov/40031258).  \n1. [**^**](https://en.wikipediaorg/wiki/Reinforcement_learning#cite_ref-50) Soucek, Branko (6 May 1992). *Dynamic, Genetic and Chaotic Programming: The Sixth-Generation Computer Technology Series*. John Wiley & Sons, Inc. p.\xa038. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[0-471-55717-X](https://en.wikipedia.org/wiki/Special:BookSources/0-471-55717-X).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-intro_deep_RL_51-0) Francois-Lavet, Vincent; et\xa0al. (2018). "AnIntroduction to Deep Reinforcement Learning". *Foundations and Trends inMachine Learning*. **11** (3â€“4): 219â€“354. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1811.12560](https://arxiv.org/abs/181112560). [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier)):[2018arXiv181112560F](https://ui.adsabs.harvard.edu/abs/2018arXiv181112560F). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1561/2200000071](https://doi.org/10.1561%2F2200000071). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[54434537](https://api.semanticscholar.org/CorpusID:54434537).  \n1. [**^**](https:/en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-DQN2_52-0) Mnih, Volodymyr; et\xa0al. (2015). "Human-level control through deep reinforcement learning". *Nature*. **518** (7540): 529â€“533. [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier)):[2015Natur.518..529M](https://ui.adsabs.harvard.edu/abs/2015Natur.518..529M). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1038/nature14236](https://doi.org/10.1038%2Fnature14236). [PMID](https://en.wikipedia.org/wiki/PMID_(identifier))[25719670](https://pubmed.ncbi.nlm.nih.gov/25719670). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[205242740](https://api.semanticscholar.org/CorpusID:205242740).  \n1. [**^**](https:/en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-53) Goodfellow, Ian; Shlens, Jonathan; Szegedy, Christian (2015). "Explaining and Harnessing Adversarial Examples". *International Conference onLearning Representations*. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1412.6572](https://arxiv.org/abs/1412.6572).  \n1. [**^**](https://en.wikipedia.orgwiki/Reinforcement_learning#cite_ref-54) Behzadan, Vahid; Munir, Arslan (2017). "Vulnerability of Deep Reinforcement Learning to Policy Induction Attacks". *Machine Learning and Data Mining in PatternRecognition*. Lecture Notes in Computer Science. Vol.\xa010358. pp.\xa0262â€“275. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1701.04143](https://arxiv.org/abs/1701.04143). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/978-3-319-62416-7_19](https://doi.org/10.1007%2F978-3-319-62416-7_19). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-3-319-62415-0](https://en.wikipedia.org/wiki/Special:BookSources978-3-319-62415-0). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[1562290](https://api.semanticscholar.org/CorpusID:1562290).  \n1. [**^**](https://enwikipedia.org/wiki/Reinforcement_learning#cite_ref-55) Huang, Sandy; Papernot, Nicolas; Goodfellow, Ian; Duan, Yan; Abbeel, Pieter (2017-02-07). [*Adversarial Attacks on Neural Network Policies*](http:/worldcat.org/oclc/1106256905). [OCLC](https://en.wikipedia.org/wiki/OCLC_(identifier))[1106256905](https://search.worldcat.org/oclc/1106256905).  \n1. [**^**](https://enwikipedia.org/wiki/Reinforcement_learning#cite_ref-56) Korkmaz, Ezgi (2022). ["Deep Reinforcement Learning Policies Learn Shared Adversarial Features Across MDPs"](https://doi.org/10.1609%2Faaai.v36i7.20684).*Thirty-Sixth AAAI Conference on Artificial Intelligence (AAAI-22)*. **36** (7): 7229â€“7238. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2112.09025](https://arxiv.org/abs/2112.09025). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1609/aaai.v36i7.20684](https://doi.org/10.1609%2Faaai.v36i7.20684). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[245219157](https://api.semanticscholar.org/CorpusID:245219157).  \n1. [**^**](https:/en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-57) Berenji, H.R. (1994). ["Fuzzy Q-learning: A new approach for fuzzy dynamic programming"](https://ieeexplore.ieee.org/document/343737).*Proceedings of 1994 IEEE 3rd International Fuzzy Systems Conference*. Orlando, FL, USA: IEEE. pp.\xa0486â€“491. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1109/FUZZY.1994.343737](https://doi.org/101109%2FFUZZY.1994.343737). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[0-7803-1896-X](https://en.wikipedia.org/wiki/Special:BookSources/0-7803-1896-X). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[56694947](https://api.semanticscholar.org/CorpusID:56694947).  \n1. [**^**](https:/en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-58) Vincze, David (2017). ["Fuzzy rule interpolation and reinforcement learning"](http://users.iit.uni-miskolc.hu/~vinczed/researchvinczed_sami2017_author_draft.pdf) (PDF). *2017 IEEE 15th International Symposium on Applied Machine Intelligence and Informatics (SAMI)*. IEEE. pp.\xa0173â€“178. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1109/SAMI2017.7880298](https://doi.org/10.1109%2FSAMI.2017.7880298). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-1-5090-5655-2](https://en.wikipedia.org/wiki/Special:BookSources978-1-5090-5655-2). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[17590120](https://api.semanticscholar.org/CorpusID:17590120).  \n1. [**^**](https:/en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-59) Ng, A. Y.; Russell, S. J. (2000). ["Algorithms for Inverse Reinforcement Learning"](https://ai.stanford.edu/~ang/papers/icml00-irl.pdf) (PDF).*Proceeding ICML \'00 Proceedings of the Seventeenth International Conference on Machine Learning*. Morgan Kaufmann Publishers. pp.\xa0663â€“670. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[1-55860-707-2](https://en.wikipedia.org/wiki/Special:BookSources/1-55860-707-2).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-60) Ziebart, Brian D.; Maas, Andrew; Bagnell, J. Andrew; Dey, Anind K.(2008-07-13). ["Maximum entropy inverse reinforcement learning"](https://dl.acm.org/doi/10.5555/1620270.1620297). *Proceedings of the 23rd National Conference on Artificial Intelligence - Volume3*. AAAI\'08. Chicago, Illinois: AAAI Press: 1433â€“1438. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-1-57735-368-3](https://en.wikipedia.org/wiki/Special:BookSources978-1-57735-368-3). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[336219](https://api.semanticscholar.org/CorpusID:336219).  \n1. [**^**](https://enwikipedia.org/wiki/Reinforcement_learning#cite_ref-61) Pitombeira-Neto, Anselmo R.; Santos, Helano P.; Coelho da Silva, Ticiana L.; de Macedo, JosÃ© Antonio F. (March 2024). ["Trajectory modeling viarandom utility inverse reinforcement learning"](https://doi.org/10.1016/j.ins.2024.120128). *Information Sciences*. **660**: 120128. [arXiv](https://en.wikipedia.org/wiki/ArXiv(identifier)):[2105.12092](https://arxiv.org/abs/2105.12092). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1016/j.ins.2024.120128](https://doi.org/10.1016%2Fj.ins.2024.120128). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier))[0020-0255](https://search.worldcat.org/issn/0020-0255). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[235187141](https://api.semanticscholar.org/CorpusID:235187141).  \n1. [**^**](https:/en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-62) Hayes C, Radulescu R, Bargiacchi E, et\xa0al. (2022). ["A practical guide to multi-objective reinforcement learning and planning"](https://doi.org/101007%2Fs10458-022-09552-y). *Autonomous Agents and Multi-Agent Systems*. **36**. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2103.09568](https://arxiv.org/abs/2103.09568). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/s10458-022-09552-y](https://doi.org/10.1007%2Fs10458-022-09552-y). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[254235920](https://api.semanticscholar.org/CorpusID:254235920).,  \n1. [**^**(https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-63) Tzeng,Gwo-Hshiung; Huang, Jih-Jeng (2011). *Multiple Attribute Decision Making: Methods and Applications* (1st\xa0ed.). CRC Press. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[9781439861578](https://en.wikipedia.org/wiki/Special:BookSources/9781439861578).  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-64) GarcÃ­a, Javier; FernÃ¡ndez, Fernando (1 January 2015). ["Acomprehensive survey on safe reinforcement learning"](https://jmlr.org/papers/volume16/garcia15a/garcia15a.pdf) (PDF). *The Journal of Machine Learning Research*. **16** (1): 1437â€“1480. \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-65) Dabney, Will; Ostrovski, Georg; Silver, David; Munos, Remi(2018-07-03). ["Implicit Quantile Networks for Distributional Reinforcement Learning"](https://proceedings.mlr.press/v80/dabney18a.html). *Proceedings of the 35th International Conference on Machine Learning*. PMLR:1096â€“1105. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1806.06923](https://arxiv.org/abs/1806.06923).  \n1. [**^**](https://en.wikipediaorg/wiki/Reinforcement_learning#cite_ref-66) Chow, Yinlam; Tamar, Aviv; Mannor, Shie; Pavone, Marco (2015). ["Risk-Sensitive and Robust Decision-Making: a CVaR Optimization Approach"](https://proceedings.neurips.cc/paper/2015/hash/64223ccf70bbb65a3a4aceac37e21016-Abstract.html). *Advances in Neural InformationProcessing Systems*. **28**. Curran Associates, Inc. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1506.02188](https://arxiv.org/abs/1506.02188).  \n1. [**^**](https://en.wikipediaorg/wiki/Reinforcement_learning#cite_ref-67)["Train Hard, Fight Easy: Robust Meta Reinforcement Learning"](https://scholar.google.com/citations?view_op=view_citation&hl=en&user=LnwyFkkAAAAJcitation_for_view=LnwyFkkAAAAJ%3AeQOLeE2rZwMC). *scholar.google.com*. Retrieved 2024-06-21.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-68) Tamar, Aviv; Glassner, Yonatan; Mannor, Shie(2015-02-21). ["Optimizing the CVaR via Sampling"](https://ojs.aaai.org/index.php/AAAI/article/view/9561). *Proceedings of the AAAI Conference on Artificial Intelligence*. **29** (1). [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1404.3862](https://arxiv.org/abs/1404.3862). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1609/aaai.v29i1.9561](https://doi.org/10.1609%2Faaai.v29i1.9561). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier))[2374-3468](https://search.worldcat.org/issn/2374-3468).  \n1. [**^**](https://enwikipedia.org/wiki/Reinforcement_learning#cite_ref-69) Greenberg, Ido; Chow, Yinlam; Ghavamzadeh, Mohammad; Mannor, Shie (2022-12-06). ["Efficient Risk-Averse Reinforcement Learning"](https://proceedings.neurips.cc/paper_files/paper/2022/hash/d2511dfb731fa336739782ba825cd98c-Abstract-Conference.html). *Advances inNeural Information Processing Systems*. **35**: 32639â€“32652. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2205.05138](https://arxiv.org/abs/2205.05138).  \n1. [**^**](https://en.wikipediaorg/wiki/Reinforcement_learning#cite_ref-70) Bozinovski, S. (1982). "A self-learning system using secondary reinforcement". In Trappl, Robert (ed.). Cybernetics and Systems Research: Proceedings of the SixthEuropean Meeting on Cybernetics and Systems Research. North-Holland. pp. 397â€“402. ISBN 978-0-444-86488-8  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-71) Bozinovski S. (1995) "Neurogenetic agents and structural theory of self-reinforcement learning systems". CMPSCI Technical Report 95-107, University of Massachusetts at Amherst [[1]](https://web.cs.umass.edu/publication/docs/1995UM-CS-1995-107.pdf)  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-72) Bozinovski, S. (2014) "Modeling mechanisms of cognition-emotioninteraction in artificial neural networks, since 1981." Procedia Computer Science p. 255â€“263  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-73) Engstrom, Logan; Ilyas, Andrew;Santurkar, Shibani; Tsipras, Dimitris; Janoos, Firdaus; Rudolph, Larry; Madry, Aleksander (2019-09-25). ["Implementation Matters in Deep RL: A Case Study on PPO and TRPO"](https://openreview.net/forumid=r1etN1rtPB). *ICLR*.  \n1. [**^**](https://en.wikipedia.org/wiki/Reinforcement_learning#cite_ref-74) Colas, CÃ©dric (2019-03-06). ["A Hitchhiker\'s Guide to StatisticalComparisons of Reinforcement Learning Algorithms"](https://openreview.net/forum?id=ryx0N3IaIV). *International Conference on Learning Representations*. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1904.06979](https://arxiv.org/abs/1904.06979).  \n1. [**^**](https://en.wikipediaorg/wiki/Reinforcement_learning#cite_ref-75) Greenberg, Ido; Mannor,Shie (2021-07-01). ["Detecting Rewards Deterioration in Episodic Reinforcement Learning"](https://proceedings.mlr.press/v139/greenberg21ahtml). *Proceedings of the 38th International Conference on Machine Learning*. PMLR: 3842â€“3853. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[2010.11660](https://arxiv.org/abs/2010.11660).  \n##Further reading  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=34)]  \n- Annaswamy, Anuradha M. (3 May 2023).["Adaptive Control and Intersections with Reinforcement Learning"](https://doi.org/10.1146%2Fannurev-control-062922-090153). *Annual Review of Control, Robotics, and Autonomous Systems*. **6** (1):65â€“93. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1146/annurev-control-062922-090153](https://doi.org/101146%2Fannurev-control-062922-090153). [ISSN](https://en.wikipedia.org/wiki/ISSN_(identifier))[2573-5144](https://search.worldcat.org/issn/2573-5144). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[255702873](https://api.semanticscholar.org/CorpusID:255702873).  \n- [Auer, Peter(https://en.wikipedia.org/wiki/Peter_Auer); Jaksch, Thomas; Ortner, Ronald (2010). ["Near-optimal regret bounds for reinforcement learning"](http://jmlr.csail.mit.edu/papers/v11/jaksch10a.html). *Journal ofMachine Learning Research*. **11**: 1563â€“1600.  \n- Bertsekas, DimitriP. (2023) [2019]. [*REINFORCEMENT LEARNING AND OPTIMAL CONTROL*](http://www.mit.edu/~dimitrib/RLbook.html) (1st\xa0ed.). Athena Scientific. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-1-886-52939-7](https://en.wikipedia.org/wiki/Special:BookSources978-1-886-52939-7).  \n- Busoniu, Lucian; Babuska, Robert; [De Schutter, Bart](https://en.wikipedia.org/wiki/Bart_De_Schutter); Ernst, Damien (2010). [*Reinforcement Learning and Dynamic Programming using FunctionApproximators*](http://www.dcsc.tudelft.nl/rlbook/). Taylor & Francis CRC Press. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-1-4398-2108-4](https://en.wikipedia.org/wiki/Special:BookSources978-1-4398-2108-4).  \n- FranÃ§ois-Lavet, Vincent; Henderson, Peter; Islam, Riashat; Bellemare, Marc G.; Pineau, Joelle (2018). "An Introduction to Deep Reinforcement Learning". *Foundations and Trends inMachine Learning*. **11** (3â€“4): 219â€“354. [arXiv](https://en.wikipedia.org/wiki/ArXiv_(identifier)):[1811.12560](https://arxiv.org/abs/1811.12560). [Bibcode](https://en.wikipedia.org/wiki/Bibcode_(identifier)):[2018arXiv181112560F](https://ui.adsabs.harvard.edu/abs/2018arXiv181112560F). [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1561/2200000071](https://doi.org/10.1561%2F2200000071). [S2CID](https://en.wikipedia.org/wiki/S2CID_(identifier))[54434537](https://api.semanticscholar.org/CorpusID:54434537).  \n- Li, Shengbo Eben(2023). [*Reinforcement Learning for Sequential Decision and Optimal Control*](https://link.springer.com/book/10.1007/978-981-19-7784-8) (1st\xa0ed.). Springer Verlag, Singapore. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/978-981-19-7784-8](https://doi.org/10.1007%2F978-981-19-7784-8). [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-9-811-97783-1](https://en.wikipedia.org/wiki/Special:BookSources978-9-811-97783-1).  \n- Powell, Warren (2011). [*Approximate dynamic programming: solving the curses of dimensionality*](https://web.archive.org/web/20160731230325/http://castlelab.princeton.edu/adp.htm). Wiley-Interscience.Archived from [the original](http://www.castlelab.princeton.edu/adp.htm) on 2016-07-31. Retrieved 2010-09-08.  \n- [Sutton, Richard S.](https://en.wikipedia.orgwiki/Richard_S._Sutton) (1988). ["Learning to predict by the methodof temporal differences"](https://doi.org/10.1007%2FBF00115009). *Machine Learning*. **3**: 9â€“44. [doi](https://en.wikipedia.org/wiki/Doi_(identifier)):[10.1007/BF00115009](https://doi.org/10.1007%2FBF00115009).  \n- [Sutton, Richard S.(https://en.wikipedia.org/wiki/Richard_S._Sutton); [Barto, Andrew G.](https://en.wikipedia.org/wiki/Andrew_Barto) (2018) [1998]. [*Reinforcement Learning: An Introduction*](http://incompleteideas.net/suttonbook/the-book.html) (2nd\xa0ed.). MIT Press. [ISBN](https://en.wikipedia.org/wiki/ISBN_(identifier))[978-0-262-03924-6](https://en.wikipedia.org/wiki/Special:BookSources978-0-262-03924-6).  \n- Szita, Istvan; Szepesvari, Csaba (2010). ["Model-based Reinforcement Learning with Nearly Tight Exploration Complexity Bounds"](https://web.archive.org/web/20100714095438/http://www.icml2010.orgpapers/546.pdf) (PDF). *ICML 2010*. Omnipress. pp.\xa01031â€“1038. Archived from [the original](http://www.icml2010.org/papers/546.pdf) (PDF) on 2010-07-14.  \n## External links  \n[[edit](https://en.wikipedia.org/w/index.php?title=Reinforcement_learning&action=edit&section=35)]  \n- [Dissecting Reinforcement Learning](https://mpatacchiola.github.io/blog/2016/12/09/dissecting-reinforcement-learning.html) Series of blog post on reinforcement learningwith Python code  \n- [A (Long) Peek into Reinforcement Learning](https://lilianweng.github.io/posts/2018-02-19-rl-overview/)  \n"""  # noqa: E501, RUF001
