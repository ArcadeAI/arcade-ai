{
  "name": "GetEnterpriseMembers",
  "fully_qualified_name": "TrelloApi.GetEnterpriseMembers@0.1.0",
  "description": "Retrieve members of a specified enterprise on Trello.\n\nThis tool fetches and returns a list of members belonging to a specified enterprise in Trello. Ideal for when user needs to access or display membership information of a Trello enterprise.",
  "toolkit": {
    "name": "ArcadeTrelloApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "enterprise_id",
        "required": true,
        "description": "The unique identifier of the enterprise whose members you want to retrieve.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "ID of the Enterprise to retrieve."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "id"
      },
      {
        "name": "member_fields",
        "required": false,
        "description": "A comma-separated list of valid member fields to include in the response. Refer to Trello's member object documentation for valid fields.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A comma-seperated list of valid [member fields](/cloud/trello/guides/rest-api/object-definitions/#member-object)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "fields"
      },
      {
        "name": "filter_scim_query",
        "required": false,
        "description": "SCIM-style query to filter enterprise members, taking precedence over member type values.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Pass a [SCIM-style query](/cloud/trello/scim/) to filter members. This takes precedence over the all/normal/admins value of members. If any of the below member_* args are set, the member array will be paginated."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter"
      },
      {
        "name": "sort_members_by",
        "required": false,
        "description": "SCIM-style sorting string for enterprise members. Prefix with '-' for descending order, otherwise ascending.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "sort"
      },
      {
        "name": "sort_by",
        "required": false,
        "description": "Deprecated: Use 'sort' instead. Specifies sorting for members. This accepts SCIM-style values but is not recommended for use.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Deprecated: Please use `sort` instead. This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "sortBy"
      },
      {
        "name": "use_deprecated_sort_order",
        "required": false,
        "description": "Use deprecated sorting order: `ascending`, `descending`, `asc`, `desc`. Recommended to use `sort` instead.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": ["ascending", "descending", "asc", "desc", "None"],
          "properties": null,
          "inner_properties": null,
          "description": "Deprecated: Please use `sort` instead. One of: `ascending`, `descending`, `asc`, `desc`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "sortOrder"
      },
      {
        "name": "start_index",
        "required": false,
        "description": "Starting point for pagination, any integer between 0 and 9999.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Any integer between 0 and 9999."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "startIndex"
      },
      {
        "name": "scim_style_filter",
        "required": false,
        "description": "A SCIM-style filter to specify the number of members to retrieve.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "[SCIM-style filter](/cloud/trello/scim/)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "count"
      },
      {
        "name": "organization_fields",
        "required": false,
        "description": "Specifies valid fields for nested organization data when retrieving enterprise members.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Any valid value that the [nested organization field resource](/cloud/trello/guides/rest-api/nested-resources/) accepts."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "organization_fields"
      },
      {
        "name": "board_fields_to_include",
        "required": false,
        "description": "Comma-separated list of board resource fields to include for each member. Refer to Trello's nested board resource for valid values.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Any valid value that the [nested board resource](/cloud/trello/guides/rest-api/nested-resources/) accepts."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "board_fields"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'get-enterprises-id-members'.",
    "available_modes": ["value", "error", "null"],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "TRELLO_API_KEY"
      },
      {
        "key": "TRELLO_TOKEN"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.0.0",
    "description": "Tools that enable LLMs to interact directly with the trello API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.0.0",
      "description": ""
    },
    "url": "https://api.trello.com/1/enterprises/{id}/members",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "fields",
        "tool_parameter_name": "member_fields",
        "description": "A comma-seperated list of valid [member fields](/cloud/trello/guides/rest-api/object-definitions/#member-object).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A comma-seperated list of valid [member fields](/cloud/trello/guides/rest-api/object-definitions/#member-object)."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "filter",
        "tool_parameter_name": "filter_scim_query",
        "description": "Pass a [SCIM-style query](/cloud/trello/scim/) to filter members. This takes precedence over the all/normal/admins value of members. If any of the below member_* args are set, the member array will be paginated.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Pass a [SCIM-style query](/cloud/trello/scim/) to filter members. This takes precedence over the all/normal/admins value of members. If any of the below member_* args are set, the member array will be paginated."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "sort",
        "tool_parameter_name": "sort_members_by",
        "description": "This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "sortBy",
        "tool_parameter_name": "sort_by",
        "description": "Deprecated: Please use `sort` instead. This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Deprecated: Please use `sort` instead. This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "sortOrder",
        "tool_parameter_name": "use_deprecated_sort_order",
        "description": "Deprecated: Please use `sort` instead. One of: `ascending`, `descending`, `asc`, `desc`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": ["ascending", "descending", "asc", "desc", "None"],
          "properties": null,
          "inner_properties": null,
          "description": "Deprecated: Please use `sort` instead. One of: `ascending`, `descending`, `asc`, `desc`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "startIndex",
        "tool_parameter_name": "start_index",
        "description": "Any integer between 0 and 9999.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Any integer between 0 and 9999."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "count",
        "tool_parameter_name": "scim_style_filter",
        "description": "[SCIM-style filter](/cloud/trello/scim/).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "[SCIM-style filter](/cloud/trello/scim/)."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "organization_fields",
        "tool_parameter_name": "organization_fields",
        "description": "Any valid value that the [nested organization field resource](/cloud/trello/guides/rest-api/nested-resources/) accepts.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Any valid value that the [nested organization field resource](/cloud/trello/guides/rest-api/nested-resources/) accepts."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "board_fields",
        "tool_parameter_name": "board_fields_to_include",
        "description": "Any valid value that the [nested board resource](/cloud/trello/guides/rest-api/nested-resources/) accepts.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Any valid value that the [nested board resource](/cloud/trello/guides/rest-api/nested-resources/) accepts."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "id",
        "tool_parameter_name": "enterprise_id",
        "description": "ID of the Enterprise to retrieve.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "ID of the Enterprise to retrieve."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "TRELLO_API_KEY",
        "parameter_name": "key",
        "accepted_as": "query",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "TRELLO_TOKEN",
        "parameter_name": "token",
        "accepted_as": "query",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      }
    ]
  }
}
