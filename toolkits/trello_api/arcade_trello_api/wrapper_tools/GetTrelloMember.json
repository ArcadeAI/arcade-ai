{
  "name": "GetTrelloMember",
  "fully_qualified_name": "TrelloApi.GetTrelloMember@0.1.0",
  "description": "Retrieve detailed information about a Trello member using their ID.\n\nThis tool fetches detailed information about a Trello member given their specific ID. It is useful when detailed member data is needed for tasks involving user management or collaboration analysis on Trello.",
  "toolkit": {
    "name": "ArcadeTrelloApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "member_id_or_username",
        "required": true,
        "description": "The ID or username of the Trello member whose details you want to retrieve.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID or username of the member"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "id"
      },
      {
        "name": "include_actions_nested_resource",
        "required": false,
        "description": "Specifies if and how to include actions. See the Actions Nested Resource for options.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "See the [Actions Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#actions-nested-resource)"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "actions"
      },
      {
        "name": "include_boards_information",
        "required": false,
        "description": "Fetch additional board-related details for the member. Refer to the Boards Nested Resource documentation for more specifics.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "See the [Boards Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#boards-nested-resource)"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "boards"
      },
      {
        "name": "board_backgrounds_filter",
        "required": false,
        "description": "Specify the type of board backgrounds to retrieve: 'all', 'custom', 'default', 'none', or 'premium'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "custom",
            "default",
            "none",
            "premium"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "One of: `all`, `custom`, `default`, `none`, `premium`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "boardBackgrounds"
      },
      {
        "name": "boards_invited_filter",
        "required": false,
        "description": "Specify 'all' or a comma-separated list of board statuses such as closed, members, open, organization, pinned, public, starred, unpinned to filter invited boards.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "closed",
            "members",
            "open",
            "organization",
            "pinned",
            "public",
            "starred",
            "unpinned"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of: closed, members, open, organization, pinned, public, starred, unpinned"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "boardsInvited"
      },
      {
        "name": "boards_invited_fields",
        "required": false,
        "description": "Specify `all` or a comma-separated list of board fields such as id, name, desc, etc., to retrieve specific fields for boards the member is invited to.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "id",
            "name",
            "desc",
            "descData",
            "closed",
            "idMemberCreator",
            "idOrganization",
            "pinned",
            "url",
            "shortUrl",
            "prefs",
            "labelNames",
            "starred",
            "limits",
            "memberships",
            "enterpriseOwned"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "boardsInvited_fields"
      },
      {
        "name": "include_card_details",
        "required": false,
        "description": "Specify if card details associated with the member should be retrieved, with options detailed in the Cards Nested Resource guide.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "See the [Cards Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#cards-nested-resource) for additional options"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "cards"
      },
      {
        "name": "custom_board_backgrounds",
        "required": false,
        "description": "Specify if all or none of the custom board backgrounds are included.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "none"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or `none`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "customBoardBackgrounds"
      },
      {
        "name": "include_custom_emoji",
        "required": false,
        "description": "Include all custom emojis if set to 'all', or exclude them if set to 'none'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "none"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or `none`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "customEmoji"
      },
      {
        "name": "include_custom_stickers",
        "required": false,
        "description": "Specify whether to include all custom stickers ('all') or none ('none') in the member data.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "none"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or `none`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "customStickers"
      },
      {
        "name": "member_fields",
        "required": false,
        "description": "Specify 'all' or a list of member fields to retrieve, such as 'id,email,fullName'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "id"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "fields"
      },
      {
        "name": "include_notifications",
        "required": false,
        "description": "Include notifications related data for the member. See the Trello Notifications Nested Resource for more details.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "See the [Notifications Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#notifications-nested-resource)"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "notifications"
      },
      {
        "name": "include_organizations",
        "required": false,
        "description": "Specify which organizations to include for the Trello member. Options: 'all', 'members', 'none', 'public'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "members",
            "none",
            "public"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "One of: `all`, `members`, `none`, `public`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "organizations"
      },
      {
        "name": "organization_fields_to_include",
        "required": false,
        "description": "Specify 'all' or a comma-separated list of fields (e.g., 'id,name') to retrieve specific organization details.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "id",
            "name"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "organization_fields"
      },
      {
        "name": "include_invited_organizations",
        "required": false,
        "description": "Specify which invited organizations to include: 'all', 'members', 'none', or 'public'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "members",
            "none",
            "public"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "One of: `all`, `members`, `none`, `public`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "organizationsInvited"
      },
      {
        "name": "organizations_invited_fields",
        "required": false,
        "description": "Specify 'all' or provide a comma-separated list of organization fields to retrieve, such as 'id,name'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "id",
            "name"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "organizationsInvited_fields"
      },
      {
        "name": "include_tokens",
        "required": false,
        "description": "Specify whether to include all tokens or none in the retrieved member data. Use 'all' to include all tokens, or 'none' to exclude them.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "none"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or `none`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "tokens"
      },
      {
        "name": "include_board_stars",
        "required": false,
        "description": "Whether to return the board stars. Set to true to include the data.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Whether to return the boardStars or not"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "boardStars"
      },
      {
        "name": "include_organization_paid_account_info",
        "required": false,
        "description": "Set to true to include paid account information in the returned workspace object.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Whether or not to include paid account information in the returned workspace object"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "organization_paid_account"
      },
      {
        "name": "include_paid_account_info",
        "required": false,
        "description": "Set to True to include paid account information in the returned member object.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Whether or not to include paid account information in the returned member object"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "paid_account"
      },
      {
        "name": "include_saved_searches",
        "required": false,
        "description": "Set to `true` to include saved searches in the member information. Use `false` to exclude.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "savedSearches"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'get-members=id'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "TRELLO_KEY"
      },
      {
        "key": "TRELLO_TOKEN"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.0.0",
    "description": "Tools that enable LLMs to interact directly with the trello API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.0.0",
      "description": ""
    },
    "url": "https://api.trello.com/1/members/{id}",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "actions",
        "tool_parameter_name": "include_actions_nested_resource",
        "description": "See the [Actions Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#actions-nested-resource)",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "See the [Actions Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#actions-nested-resource)"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "boards",
        "tool_parameter_name": "include_boards_information",
        "description": "See the [Boards Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#boards-nested-resource)",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "See the [Boards Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#boards-nested-resource)"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "boardBackgrounds",
        "tool_parameter_name": "board_backgrounds_filter",
        "description": "One of: `all`, `custom`, `default`, `none`, `premium`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "custom",
            "default",
            "none",
            "premium"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "One of: `all`, `custom`, `default`, `none`, `premium`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "boardsInvited",
        "tool_parameter_name": "boards_invited_filter",
        "description": "`all` or a comma-separated list of: closed, members, open, organization, pinned, public, starred, unpinned",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "closed",
            "members",
            "open",
            "organization",
            "pinned",
            "public",
            "starred",
            "unpinned"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of: closed, members, open, organization, pinned, public, starred, unpinned"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "boardsInvited_fields",
        "tool_parameter_name": "boards_invited_fields",
        "description": "`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "id",
            "name",
            "desc",
            "descData",
            "closed",
            "idMemberCreator",
            "idOrganization",
            "pinned",
            "url",
            "shortUrl",
            "prefs",
            "labelNames",
            "starred",
            "limits",
            "memberships",
            "enterpriseOwned"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "boardStars",
        "tool_parameter_name": "include_board_stars",
        "description": "Whether to return the boardStars or not",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Whether to return the boardStars or not"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "cards",
        "tool_parameter_name": "include_card_details",
        "description": "See the [Cards Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#cards-nested-resource) for additional options",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "See the [Cards Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#cards-nested-resource) for additional options"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "customBoardBackgrounds",
        "tool_parameter_name": "custom_board_backgrounds",
        "description": "`all` or `none`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "none"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or `none`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "customEmoji",
        "tool_parameter_name": "include_custom_emoji",
        "description": "`all` or `none`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "none"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or `none`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "customStickers",
        "tool_parameter_name": "include_custom_stickers",
        "description": "`all` or `none`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "none"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or `none`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "fields",
        "tool_parameter_name": "member_fields",
        "description": "`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "id"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "notifications",
        "tool_parameter_name": "include_notifications",
        "description": "See the [Notifications Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#notifications-nested-resource)",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "See the [Notifications Nested Resource](/cloud/trello/guides/rest-api/nested-resources/#notifications-nested-resource)"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "organizations",
        "tool_parameter_name": "include_organizations",
        "description": "One of: `all`, `members`, `none`, `public`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "members",
            "none",
            "public"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "One of: `all`, `members`, `none`, `public`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "organization_fields",
        "tool_parameter_name": "organization_fields_to_include",
        "description": "`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "id",
            "name"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "organization_paid_account",
        "tool_parameter_name": "include_organization_paid_account_info",
        "description": "Whether or not to include paid account information in the returned workspace object",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Whether or not to include paid account information in the returned workspace object"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "organizationsInvited",
        "tool_parameter_name": "include_invited_organizations",
        "description": "One of: `all`, `members`, `none`, `public`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "members",
            "none",
            "public"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "One of: `all`, `members`, `none`, `public`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "organizationsInvited_fields",
        "tool_parameter_name": "organizations_invited_fields",
        "description": "`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "id",
            "name"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "paid_account",
        "tool_parameter_name": "include_paid_account_info",
        "description": "Whether or not to include paid account information in the returned member object",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Whether or not to include paid account information in the returned member object"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "savedSearches",
        "tool_parameter_name": "include_saved_searches",
        "description": "",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "tokens",
        "tool_parameter_name": "include_tokens",
        "description": "`all` or `none`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "none"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or `none`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "id",
        "tool_parameter_name": "member_id_or_username",
        "description": "The ID or username of the member",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID or username of the member"
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "TRELLO_KEY",
        "parameter_name": "key",
        "accepted_as": "query",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "TRELLO_TOKEN",
        "parameter_name": "token",
        "accepted_as": "query",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      }
    ]
  }
}
